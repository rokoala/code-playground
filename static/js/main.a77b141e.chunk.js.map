{"version":3,"sources":["components/BoxCode/styles.ts","components/BoxCode/index.tsx","utils/index.ts","components/Resizer/styles.ts","components/Resizer/ResizerBar.tsx","components/Resizer/ResizerContent.tsx","components/Resizer/ResizerBlock.tsx","components/Resizer/index.tsx","components/TitleInput/styles.ts","components/TitleInput/index.tsx","components/MobileEditorNav/styles.ts","components/MobileEditorNav/index.tsx","components/BoxCodeBlock/styles.ts","components/BoxCodeBlock/index.tsx","components/Styled/Button.ts","containers/Header/styles.ts","containers/Header/index.tsx","containers/SimpleCodeContent/styles.ts","containers/SimpleCodeContent/index.tsx","actions/actions.ts","views/SimpleCode.tsx","reducers/codeReducer.ts","store/store.ts","index.tsx"],"names":["Title","styled","h2","Header","div","BoxContent","BoxCode","initialValue","title","theme","language","onCodeChange","height","width","value","onChange","options","automaticLayout","minimap","enabled","defaultValue","getWindowDimensions","window","innerWidth","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","Bar","props","hide","isVertical","ResizerBar","limit","xmin","ymin","xmax","ymax","onResize","onStop","elem","useRef","xyLimit","isResizing","setIsResizing","x","y","startXY","setStartXY","resize","e","clientX","clientY","diff","stopResize","current","dim","getBoundingClientRect","resizeTouch","touches","stopResizeTouch","ref","onTouchStart","onMouseDown","ResizerContent","children","currentX","diffX","win","previousX","setPreviousX","widthDiff","setWidthDiff","style","position","visibility","ResizerBlock","initialWidth","disableResizeBar","leftDiff","rightDiff","Resizer","mobileMode","initWidth","previousWidth","usePrevious","countElements","React","Children","count","Array","fill","diffControl","setDiffControl","widthControl","setWidthControl","resizeDiff","map","child","index","newDiff","newWidthControl","filter","_","idx","reduce","accumulator","currentValue","TitleText","TitleWrapper","TitleEditInput","input","EditButton","button","TitleInput","placeholder","onTitleChange","setTitle","editTitle","setEditTitle","autoFocus","onBlur","target","type","onClick","icon","faPen","CodeNav","ButtonNav","isActive","MobileEditorNav","onTabChange","html","js","css","result","activeTabs","setActiveTabs","handleTabClick","tabs","CodeBlock","BoxCodeBlock","setJSCode","setHTMLCode","setCSSCode","tabsOn","setTabsOn","setMobileMode","Button","DownloadButton","MainHeader","header","HeaderTools","Logo","defaultTitle","useSelector","state","fileName","setFileName","zip","JSZip","file","generateAsync","then","content","FileSaver","saveAs","faDownload","Content","Preview","iframe","SimpleCodeContent","dispatch","useDispatch","boxCodeHeight","setBoxCodeHeight","code","payload","setCSS","setJS","setHTML","sandbox","srcDoc","SimpleCode","initialState","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a77b141e.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n    font-family: 'Lato', 'Lucida Grande', 'Lucida Sans Unicode', Tahoma, Sans-Serif;\n    white-space: nowrap;\n    font-weight: bold;\n    color: #aaaebc;\n    margin: 0;\n    font-size: 1.3em;\n    display: inline-block;\n    padding-left: 2px;\n    vertical-align: middle;\n    -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n    -khtml-user-select: none; /* Konqueror HTML */\n    -moz-user-select: none; /* Old versions of Firefox */\n    -ms-user-select: none; /* Internet Explorer/Edge */\n    user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome, Edge, Opera and Firefox */\n`;\n\nexport const Header = styled.div`\n    background: rgba(0, 0, 0, 0.1);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.05);\n    padding: 5px;\n`;\n\nexport const BoxContent = styled.div`\n    display: flex;\n    background: #1d1e22;\n    width: 100%;\n    height: 100%;\n    min-width: 0;\n    flex-direction: column;\n`;\n","import React from 'react';\nimport Editor from '@monaco-editor/react';\nimport { BoxContent, Title, Header } from './styles';\n\ninterface Props {\n    initialValue?: string;\n    title?: string;\n    language?: string;\n    theme?: string;\n    onCodeChange: (code: string) => void;\n}\n\nconst BoxCode: React.FC<Props & React.HTMLAttributes<HTMLDivElement>> = ({\n    initialValue = '',\n    title = '',\n    theme = 'vs-dark',\n    language = 'javascript',\n    onCodeChange,\n}: Props) => (\n    <BoxContent>\n        <Header>\n            <Title>{title}</Title>\n        </Header>\n        <Editor\n            height=\"calc(100% - 35px)\"\n            width=\"100%\"\n            value={initialValue}\n            onChange={(value) => {\n                onCodeChange(value || '');\n            }}\n            options={{\n                automaticLayout: true,\n                minimap: {\n                    enabled: false,\n                },\n            }}\n            theme={theme}\n            language={language}\n            defaultValue=\"\"\n        />\n    </BoxContent>\n);\n\nexport default BoxCode;\n","import { useState, useEffect, useRef } from 'react';\n\ninterface WindowDimensions {\n    width: number;\n    height: number;\n}\n\nconst getWindowDimensions = () => {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height,\n    };\n};\n\n// useWindowDimensions - React hook to get window dimensions\nexport const useWindowDimensions = (): WindowDimensions => {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n};\n\nexport const usePrevious = (value: any) => {\n    const ref = useRef();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n};\n","import styled from 'styled-components';\n\ninterface BarProps {\n    isVertical: boolean;\n    hide?: boolean;\n}\n\nexport const Bar = styled.div<BarProps>`\n    z-index: 2;\n    flex: 0.001 0 18px;\n    display: ${(props) => (props.hide ? 'none' : 'block')};\n    cursor: ${(props) => (props.isVertical ? 'row-resize' : 'col-resize')};\n    border-left: 1px solid rgba(255, 255, 255, 0.05);\n    border-right: 1px solid rgba(0, 0, 0, 0.4);\n    background-color: #333642;\n`;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Bar } from './styles';\n\ninterface XY {\n    x: number;\n    y: number;\n}\n\ninterface Limit {\n    xmin?: number;\n    ymin?: number;\n    xmax?: number;\n    ymax?: number;\n}\n\ninterface Props {\n    isVertical?: boolean;\n    limit?: Limit;\n    hide?: boolean;\n    onResize?: (diff: XY) => void;\n    onStop?: (n: XY) => void;\n}\n\nconst ResizerBar: React.FC<Props> = ({\n    isVertical = false,\n    limit = { xmin: 0, ymin: 0, xmax: 9999, ymax: 9999 },\n    hide = false,\n    onResize,\n    onStop,\n}) => {\n    const elem = useRef<HTMLDivElement>(null);\n\n    const xyLimit = { xmin: 0, ymin: 0, xmax: 9999, ymax: 9999, ...limit };\n\n    const [isResizing, setIsResizing] = useState(false);\n    const [startXY, setStartXY] = useState({\n        x: 0,\n        y: 0,\n    });\n\n    const resize = (e: MouseEvent) => {\n        const x = e.clientX;\n        const y = e.clientY;\n\n        const diff = {\n            x: x - startXY.x,\n            y: y - startXY.y,\n        };\n\n        if (onResize && y > xyLimit.ymin && y < xyLimit.ymax && x > xyLimit.xmin && x < xyLimit.xmax) {\n            onResize(diff);\n        }\n    };\n\n    const stopResize = () => {\n        let x = 0;\n        let y = 0;\n\n        if (elem.current) {\n            const dim = elem.current?.getBoundingClientRect();\n\n            x = dim.x;\n            y = dim.y;\n        }\n\n        const diff = {\n            x: x - startXY.x,\n            y: y - startXY.y,\n        };\n\n        if (onStop) onStop(diff);\n        setIsResizing(false);\n    };\n\n    const mouseDownHandler = () => {\n        let x = 0;\n        let y = 0;\n\n        if (elem.current) {\n            const dim = elem.current.getBoundingClientRect();\n\n            x = dim.x;\n            y = dim.y;\n        }\n\n        setIsResizing(true);\n        setStartXY({ x, y });\n    };\n\n    const resizeTouch = (e: any) => {\n        const x = e.touches[0].clientX;\n        const y = e.touches[0].clientY;\n\n        const diff = {\n            x: x - startXY.x,\n            y: y - startXY.y,\n        };\n\n        if (onResize) {\n            if (y >= xyLimit.ymin && y <= xyLimit.ymax) onResize(diff);\n        }\n    };\n\n    const stopResizeTouch = (e: any) => {\n        const x = e.touches[0].clientX;\n        const y = e.touches[0].clientY;\n\n        const diff = {\n            x: x - startXY.x,\n            y: y - startXY.y,\n        };\n\n        if (onStop) onStop(diff);\n        setIsResizing(false);\n    };\n\n    const touchStartHandler = (e: React.TouchEvent<HTMLDivElement>) => {\n        const x = e.touches[0].clientX;\n        const y = e.touches[0].clientY;\n\n        setIsResizing(true);\n        setStartXY({ x, y });\n    };\n\n    useEffect(() => {\n        if (isResizing) {\n            window.addEventListener('mousemove', resize, false);\n            window.addEventListener('mouseup', stopResize, false);\n            window.addEventListener('touchmove', resizeTouch, false);\n            window.addEventListener('touchleave', stopResizeTouch, false);\n        } else {\n            window.removeEventListener('mousemove', resize, false);\n            window.removeEventListener('mouseup', stopResize, false);\n            window.removeEventListener('touchmove', resizeTouch, false);\n            window.removeEventListener('touchleave', stopResizeTouch, false);\n        }\n\n        return () => {\n            window.removeEventListener('mousemove', resize, false);\n            window.removeEventListener('mouseup', stopResize, false);\n            window.removeEventListener('touchmove', resizeTouch, false);\n            window.removeEventListener('touchleave', stopResizeTouch, false);\n        };\n    }, [isResizing]);\n\n    return (\n        <Bar\n            ref={elem}\n            isVertical={isVertical}\n            hide={hide}\n            onTouchStart={touchStartHandler}\n            onMouseDown={mouseDownHandler}\n        />\n    );\n};\n\nexport default ResizerBar;\n","import React, { useState, useEffect } from 'react';\nimport { useWindowDimensions } from 'utils';\n\ninterface Props {\n    currentX: number;\n    diffX: number;\n    hide?: boolean;\n}\n\nconst ResizerContent: React.FC<Props> = ({ children, currentX, diffX, hide }) => {\n    const win = useWindowDimensions();\n\n    const [previousX, setPreviousX] = useState(currentX);\n    const [widthDiff, setWidthDiff] = useState(0);\n\n    useEffect(() => {\n        setWidthDiff(0);\n        setPreviousX(currentX);\n    }, [currentX]);\n\n    useEffect(() => {\n        setWidthDiff(diffX);\n    }, [diffX]);\n\n    return (\n        <div\n            style={{\n                position: hide ? 'absolute' : 'relative',\n                visibility: hide ? 'hidden' : 'visible',\n                width: `${((previousX + widthDiff) / win.width) * 100}%`,\n            }}\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default ResizerContent;\n","import React from 'react';\nimport ResizerBar from './ResizerBar';\nimport ResizerContent from './ResizerContent';\n\nexport interface XY {\n    x: number;\n    y?: number;\n}\n\ninterface Props {\n    hide?: boolean;\n    initialWidth: number;\n    disableResizeBar?: boolean;\n    leftDiff?: number;\n    rightDiff?: number;\n    xmax?: number;\n    xmin?: number;\n    onResize?: (diff: XY) => void;\n    onStop?: (x: XY) => void;\n}\n\nconst ResizerBlock: React.FC<Props> = ({\n    children,\n    hide = false,\n    initialWidth,\n    disableResizeBar = false,\n    leftDiff = 0,\n    rightDiff = 0,\n    xmax,\n    xmin,\n    onResize,\n    onStop,\n}) => (\n    <>\n        <ResizerBar\n            hide={hide}\n            limit={{ xmax, xmin }}\n            onResize={({ x }) => {\n                if (!disableResizeBar && onResize) onResize({ x });\n            }}\n            onStop={({ x }) => {\n                if (!disableResizeBar && onStop) onStop({ x });\n            }}\n        />\n        <ResizerContent hide={hide} currentX={initialWidth} diffX={-leftDiff + rightDiff}>\n            {children}\n        </ResizerContent>\n    </>\n);\n\nexport default ResizerBlock;\n","import React, { useState, useEffect } from 'react';\nimport { usePrevious, useWindowDimensions } from 'utils';\nimport ResizerBlock from './ResizerBlock';\n\ninterface Props {\n    hide: boolean[];\n    mobileMode?: boolean;\n}\n\nconst Resizer: React.FC<Props> = ({ children, hide, mobileMode }) => {\n    const win = useWindowDimensions();\n    const initWidth = (win.width - 18 * 3) / 3;\n    const previousWidth = usePrevious(win.width) || win.width;\n\n    const countElements = React.Children.count(children);\n\n    const [diffControl, setDiffControl] = useState(new Array(countElements).fill(0));\n    const [widthControl, setWidthControl] = useState(new Array(countElements).fill(initWidth));\n\n    useEffect(() => {\n        const resizeDiff = (win.width - previousWidth) / countElements;\n        setWidthControl([...widthControl.map((width) => width + resizeDiff)]);\n    }, [win.width]);\n\n    return (\n        <>\n            {React.Children.map(children, (child, index) => (\n                <ResizerBlock\n                    hide={hide[index]}\n                    leftDiff={diffControl[index]}\n                    rightDiff={diffControl[index + 1]}\n                    onResize={({ x }) => {\n                        const newDiff = [...diffControl];\n                        newDiff[index] = x;\n                        setDiffControl(newDiff);\n                    }}\n                    onStop={({ x }) => {\n                        const newDiff = [...diffControl];\n                        newDiff[index] = 0;\n                        setDiffControl(newDiff);\n\n                        const newWidthControl = [...widthControl];\n\n                        if (newWidthControl[index - 1]) newWidthControl[index - 1] += x;\n                        newWidthControl[index] -= x;\n\n                        setWidthControl(newWidthControl);\n                    }}\n                    disableResizeBar={index === 0}\n                    initialWidth={mobileMode ? win.width : widthControl[index]}\n                    xmax={\n                        index === countElements - 1\n                            ? win.width\n                            : widthControl\n                                  .filter((_, idx) => idx <= index + 1)\n                                  .reduce((accumulator, currentValue) => accumulator + currentValue + 18)\n                    }\n                    xmin={\n                        index <= 1\n                            ? 18\n                            : widthControl\n                                  .filter((_, idx) => idx < index - 1)\n                                  .reduce((accumulator, currentValue) => accumulator + currentValue + 18)\n                    }\n                >\n                    {child}\n                </ResizerBlock>\n            ))}\n        </>\n    );\n};\n\nexport default Resizer;\n","import styled from 'styled-components';\n\nexport const TitleText = styled.h2`\n    font-family: Lato, Lucida Grande, Lucida Sans Unicode, Tahoma, Sans-Serif;\n    color: white;\n    font-size: 1.3rem;\n    font-weight: 700;\n`;\n\nexport const TitleWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    margin: 15px;\n`;\n\nexport const TitleEditInput = styled.input`\n    width: 90px;\n`;\n\nexport const EditButton = styled.button`\n    color: white;\n    background-color: transparent;\n    border: none;\n    padding: 5px;\n    margin: 3px;\n`;\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen } from '@fortawesome/free-solid-svg-icons';\nimport { EditButton, TitleText, TitleEditInput, TitleWrapper } from './styles';\n\ninterface Props {\n    placeholder?: string;\n    onTitleChange?: (title: string) => void;\n}\n\nconst TitleInput: React.FC<Props> = ({ placeholder = '', onTitleChange }) => {\n    const [title, setTitle] = useState('');\n    const [editTitle, setEditTitle] = useState(false);\n\n    return (\n        <TitleWrapper>\n            {editTitle ? (\n                <TitleEditInput\n                    autoFocus\n                    onBlur={() => {\n                        setEditTitle(false);\n                    }}\n                    onChange={(e) => {\n                        setTitle(e.target.value);\n                        if (onTitleChange) onTitleChange(e.target.value);\n                    }}\n                    value={title}\n                    type=\"text\"\n                />\n            ) : (\n                <TitleText>{title || placeholder}</TitleText>\n            )}\n            <EditButton onClick={() => setEditTitle(true)}>\n                <FontAwesomeIcon icon={faPen} />\n            </EditButton>\n        </TitleWrapper>\n    );\n};\n\nexport default TitleInput;\n","import styled from 'styled-components';\n\nexport const CodeNav = styled.div`\n    display: flex;\n    position: absolute;\n    z-index: 2;\n    width: 100%;\n    justify-content: center;\n    flex-direction: row;\n`;\n\ninterface ButtonNavProps {\n    isActive: boolean;\n}\n\nexport const ButtonNav = styled.button<ButtonNavProps>`\n    background-color: #444857;\n    color: white;\n    border: rgba(0, 0, 0, 0.09);\n    font-size: 0.8rem;\n    padding: 4px 16px;\n    line-height: 20px;\n    margin-right: 1px;\n    border-top: ${(props) => (props.isActive ? '1px solid white' : '1px solid gray')};\n    &:active {\n        transform: translateY(1px);\n        border: none;\n    }\n    &:focus {\n        outline: none;\n    }\n`;\n","import React, { useState } from 'react';\n\nimport { ButtonNav, CodeNav } from './styles';\n\ninterface TabsControl {\n    html: boolean;\n    js: boolean;\n    css: boolean;\n    result: boolean;\n}\n\ninterface Props {\n    onTabChange: (tab: TabsControl) => void;\n}\n\nconst MobileEditorNav: React.FC<Props> = ({ onTabChange }) => {\n    const [activeTabs, setActiveTabs] = useState<TabsControl>({ html: true, js: false, css: false, result: true });\n\n    const handleTabClick = (tabs: TabsControl) => {\n        setActiveTabs(tabs);\n        onTabChange(tabs);\n    };\n\n    return (\n        <CodeNav>\n            <ButtonNav\n                isActive={activeTabs.html}\n                onClick={() => {\n                    handleTabClick({ ...activeTabs, ...{ html: true, js: false, css: false } });\n                }}\n            >\n                HTML\n            </ButtonNav>\n            <ButtonNav\n                isActive={activeTabs.js}\n                onClick={() => {\n                    handleTabClick({ ...activeTabs, ...{ html: false, js: true, css: false } });\n                }}\n            >\n                JS\n            </ButtonNav>\n            <ButtonNav\n                isActive={activeTabs.css}\n                onClick={() => {\n                    handleTabClick({ ...activeTabs, ...{ html: false, js: false, css: true } });\n                }}\n            >\n                CSS\n            </ButtonNav>\n            <ButtonNav\n                isActive={activeTabs.result}\n                onClick={() => {\n                    handleTabClick({ ...activeTabs, result: !activeTabs.result });\n                }}\n            >\n                Result\n            </ButtonNav>\n        </CodeNav>\n    );\n};\n\nexport default MobileEditorNav;\n","import styled from 'styled-components';\n\ninterface CodeBlockProps {\n    height: number;\n}\n\nexport const CodeBlock = styled.div<CodeBlockProps>`\n    display: flex;\n    position: relative;\n    background-color: black;\n    height: ${(props) => `${props.height}px`};\n    flex-direction: row;\n    width: 100%;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { BoxCode, MobileEditorNav, Resizer } from 'components';\nimport { useWindowDimensions } from 'utils';\nimport { CodeBlock } from './styles';\n\ninterface Props {\n    height: number;\n    setJSCode: (code: string) => void;\n    setHTMLCode: (code: string) => void;\n    setCSSCode: (code: string) => void;\n}\n\nconst BoxCodeBlock: React.FC<Props> = ({ height, setJSCode, setHTMLCode, setCSSCode }) => {\n    const win = useWindowDimensions();\n\n    const [tabsOn, setTabsOn] = useState({ html: true, js: false, css: false, result: true });\n    const [mobileMode, setMobileMode] = useState(false);\n\n    useEffect(() => {\n        if (win.width < 767 || win.height < 440) {\n            setMobileMode(true);\n        } else if (mobileMode) setMobileMode(false);\n    }, [win.width]);\n\n    return (\n        <CodeBlock height={height}>\n            {mobileMode && (\n                <MobileEditorNav\n                    onTabChange={(tabs) => {\n                        setTabsOn(tabs);\n                    }}\n                />\n            )}\n            <Resizer\n                mobileMode={mobileMode}\n                hide={[mobileMode && !tabsOn.html, mobileMode && !tabsOn.js, mobileMode && !tabsOn.css]}\n            >\n                <BoxCode title=\"HTML\" language=\"html\" onCodeChange={(value) => setHTMLCode(value)} />\n                <BoxCode title=\"JS\" onCodeChange={(value) => setJSCode(value)} />\n                <BoxCode title=\"CSS\" language=\"css\" onCodeChange={(value) => setCSSCode(value)} />\n            </Resizer>\n        </CodeBlock>\n    );\n};\n\nexport default BoxCodeBlock;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n    background-color: #444857;\n    color: white;\n    font-weight: 300;\n    border-radius: 5px;\n    border: rgba(0, 0, 0, 0.09);\n    font-size: 1rem;\n    padding: 10px 15px;\n    line-height: 20px;\n\n    &:active {\n        transform: translateY(1px);\n        border: none;\n    }\n    &:focus {\n        outline: none;\n    }\n`;\n\nexport const DownloadButton = styled(Button)`\n    & > span {\n        margin-left: 5px;\n    }\n    @media (max-width: 767px) {\n        & > span {\n            display: none;\n        }\n    }\n`;\n","import styled from 'styled-components';\n\nexport const MainHeader = styled.header`\n    display: flex;\n    height: 65px;\n    padding: 5px 15px;\n    background-color: #1e1f26;\n    align-items: center;\n`;\n\nexport const HeaderTools = styled.div`\n    padding: 5px;\n    margin-left: auto;\n`;\n\nexport const Logo = styled.div`\n    background-image: url('/code-playground/logo192.png');\n    width: 30px;\n    height: 30px;\n    background-size: cover;\n`;\n","import React, { useState } from 'react';\nimport JSZip from 'jszip';\nimport FileSaver from 'file-saver';\nimport { useSelector } from 'react-redux';\nimport { CodeState } from 'reducers/codeReducer';\nimport { DownloadButton } from 'components/Styled';\nimport { TitleInput } from 'components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { Logo, HeaderTools, MainHeader } from './styles';\n\nconst Header: React.FC = () => {\n    const defaultTitle = 'Untitled';\n\n    const { js, html, css } = useSelector<CodeState, CodeState>((state) => state);\n\n    const [fileName, setFileName] = useState('');\n\n    return (\n        <>\n            <MainHeader>\n                <Logo />\n                <TitleInput\n                    placeholder={defaultTitle}\n                    onTitleChange={(title) => {\n                        setFileName(title);\n                    }}\n                />\n                <HeaderTools>\n                    <DownloadButton\n                        onClick={() => {\n                            const zip = new JSZip();\n                            zip.file('index.css', css);\n                            zip.file('main.js', js);\n                            zip.file('index.html', html);\n                            zip.generateAsync({ type: 'blob' }).then((content) => {\n                                FileSaver.saveAs(content, `${fileName || defaultTitle}.zip`);\n                            });\n                        }}\n                    >\n                        <FontAwesomeIcon icon={faDownload} />\n                        <span>Download</span>\n                    </DownloadButton>\n                </HeaderTools>\n            </MainHeader>\n        </>\n    );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const Content = styled.div`\n    display: flex;\n    height: 100%;\n    flex-direction: column;\n`;\n\nexport const Preview = styled.iframe`\n    user-select: none;\n    pointer-events: none;\n    width: 100%;\n    height: 100%;\n`;\n","import React, { useState } from 'react';\nimport { BoxCodeBlock, ResizerBar } from 'components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CodeState } from 'reducers/codeReducer';\nimport { setCSS, setHTML, setJS } from 'actions/actions';\nimport { useWindowDimensions } from 'utils';\nimport { Content, Preview } from './styles';\n\nconst SimpleCodeContent: React.FC = () => {\n    const { js, html, css } = useSelector<CodeState, CodeState>((state) => state);\n    const { height } = useWindowDimensions();\n\n    const dispatch = useDispatch();\n\n    const [boxCodeHeight, setBoxCodeHeight] = useState(350);\n\n    return (\n        <Content>\n            <BoxCodeBlock\n                height={boxCodeHeight}\n                setCSSCode={(code) => {\n                    dispatch(setCSS(code));\n                }}\n                setJSCode={(code) => {\n                    dispatch(setJS(code));\n                }}\n                setHTMLCode={(code) => {\n                    dispatch(setHTML(code));\n                }}\n            />\n            <ResizerBar\n                limit={{ ymin: 150, ymax: height - 100 }}\n                onResize={({ y }) => {\n                    setBoxCodeHeight(boxCodeHeight + y);\n                }}\n                isVertical\n            />\n            <Preview\n                sandbox=\"allow-downloads allow-forms allow-modals allow-pointer-lock allow-popups allow-presentation allow-same-origin allow-scripts allow-top-navigation-by-user-activation\"\n                title=\"preview\"\n                srcDoc={`${html} <style>${css}</style><script>${js}</script>`}\n            />\n        </Content>\n    );\n};\n\nexport default SimpleCodeContent;\n","export type Action = {type: string, payload: string}\n\nexport type SET_JS = {type:\"SET_JS\", payload: string}\n\nexport const setJS = (code:string):SET_JS =>({\n    type: \"SET_JS\",\n    payload: code\n})\n\n\nexport type SET_CSS = {type:\"SET_CSS\", payload:string}\n\nexport const setCSS = (code:string):SET_CSS =>({\n    type:\"SET_CSS\",\n    payload:code\n})\n\nexport type SET_HTML = {type:\"SET_HTML\",payload:string}\n\nexport const setHTML = (code:string):SET_HTML=>({\n    type:\"SET_HTML\",\n    payload:code\n})","import React from 'react';\nimport { Header, SimpleCodeContent } from 'containers';\n\nconst SimpleCode: React.FC = () => (\n    <>\n        <Header />\n        <SimpleCodeContent />\n    </>\n);\n\nexport default SimpleCode;\n","import { Action } from '../actions/actions';\n\nexport interface CodeState {\n    js: string;\n    css: string;\n    html: string;\n}\n\nconst initialState = {\n    js: '',\n    css: '',\n    html: '',\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const codeReducer = (state: CodeState = initialState, action: Action) => {\n    switch (action.type) {\n        case 'SET_JS': {\n            return { ...state, js: action.payload };\n        }\n        case 'SET_CSS': {\n            return { ...state, css: action.payload };\n        }\n        case 'SET_HTML': {\n            return { ...state, html: action.payload };\n        }\n        default:\n            return state;\n    }\n};\n","import { createStore } from 'redux';\n\nimport { codeReducer } from '../reducers/codeReducer';\n\nexport const store = createStore(codeReducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SimpleCodeView from 'views/SimpleCode';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <SimpleCodeView />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}