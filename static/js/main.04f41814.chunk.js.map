{"version":3,"sources":["components/BoxCode/styles.ts","components/BoxCode/index.tsx","utils/index.ts","components/Resizer/styles.ts","components/Resizer/ResizerBar.tsx","components/Resizer/ResizerContent.tsx","components/Resizer/ResizerBlock.tsx","components/Resizer/ListResizerBlock.tsx","components/Resizer/index.tsx","components/TitleInput/styles.ts","components/TitleInput/index.tsx","components/MobileEditorNav/styles.ts","components/MobileEditorNav/index.tsx","components/Styled/Button.ts","components/LayoutButton/styles.ts","components/LayoutButton/index.tsx","actions/actions.ts","containers/Header/styles.ts","containers/Header/index.tsx","containers/SimpleCodeContent/styles.ts","containers/SimpleCodeContent/index.tsx","views/SimpleCode.tsx","reducers/codeReducer.ts","reducers/layoutReducer.ts","store/store.ts","index.tsx"],"names":["Title","styled","h2","Header","div","BoxContent","BoxCode","initialValue","title","theme","language","onCodeChange","height","width","value","onChange","options","automaticLayout","minimap","enabled","defaultValue","getWindowDimensions","window","innerWidth","innerHeight","mobile","usePrevious","ref","useRef","useEffect","current","Bar","props","size","hide","isVertical","ResizerWrapper","direction","reverse","ResizerBar","limit","xmin","ymin","xmax","ymax","onResize","onStop","elem","xyLimit","useState","isResizing","setIsResizing","x","y","startXY","setStartXY","resize","e","clientX","clientY","diff","stopResize","dim","getBoundingClientRect","resizeTouch","touches","stopResizeTouch","addEventListener","removeEventListener","onTouchStart","onMouseDown","ResizerContent","children","currentX","currentY","diffX","diffY","previousX","setPreviousX","previousY","setPreviousY","widthDiff","setWidthDiff","heightDiff","setHeightDiff","style","position","visibility","ResizerBlock","barSize","initialWidth","initialHeight","disableResizeBar","leftDiff","rightDiff","topDiff","bottomDiff","args","ListResizerBlock","reverseFactor","count","boundaries","Array","fill","diffControlX","setDiffControlX","diffControlY","setDiffControlY","sizeControl","setSizeControl","previousWidth","previousHeight","resizeDiff","map","w","React","Children","child","index","newDiff","newSizeControl","filter","_","idx","reduce","accumulator","currentValue","Resizer","countElements","setBoundaries","useResizeObserver","mergedCallbackRef","callbacks","callbacksRegistry","useCallback","element","forEach","callback","useMergedCallbackRef","left","top","TitleText","TitleWrapper","TitleEditInput","input","EditButton","button","TitleInput","placeholder","onTitleChange","setTitle","editTitle","setEditTitle","autoFocus","onBlur","target","type","onClick","icon","faPen","CodeNav","ButtonNav","isActive","MobileEditorNav","onTabChange","html","js","css","activeTabs","setActiveTabs","handleTabClick","tab","tabs","Button","margin","LayoutEditor","LayoutButtonWrapper","LayoutButton","showLayouts","setShowLayouts","setJS","code","payload","setCSS","setHTML","MainHeader","header","HeaderTools","Logo","DownloadButton","HideMobile","span","defaultTitle","dispatch","useDispatch","useSelector","state","fileName","setFileName","zip","JSZip","file","generateAsync","then","content","FileSaver","saveAs","faDownload","Preview","iframe","SimpleCodeContentMobile","currentTab","setCurrentTab","getBoxCode","sandbox","srcDoc","SimpleCodeContent","windowDimensions","setWindowDimensions","handleResize","useWindowDimensions","layout","main","SimpleCode","initialState","store","createStore","combineReducers","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04f41814.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n    font-family: 'Lato', 'Lucida Grande', 'Lucida Sans Unicode', Tahoma, Sans-Serif;\n    white-space: nowrap;\n    font-weight: bold;\n    color: #aaaebc;\n    margin: 0;\n    font-size: 1.3em;\n    display: inline-block;\n    padding-left: 2px;\n    vertical-align: middle;\n    -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n    -khtml-user-select: none; /* Konqueror HTML */\n    -moz-user-select: none; /* Old versions of Firefox */\n    -ms-user-select: none; /* Internet Explorer/Edge */\n    user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome, Edge, Opera and Firefox */\n`;\n\nexport const Header = styled.div`\n    background: rgba(0, 0, 0, 0.1);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.05);\n    padding: 5px;\n`;\n\nexport const BoxContent = styled.div`\n    display: flex;\n    background: #1d1e22;\n    width: 100%;\n    height: 100%;\n    min-width: 0;\n    flex-direction: column;\n`;\n","import React from 'react';\nimport Editor from '@monaco-editor/react';\nimport { BoxContent, Title, Header } from './styles';\n\ninterface Props {\n    initialValue?: string;\n    title?: string;\n    language?: string;\n    theme?: string;\n    onCodeChange: (code: string) => void;\n}\n\nconst BoxCode: React.FC<Props & React.HTMLAttributes<HTMLDivElement>> = ({\n    initialValue = '',\n    title = '',\n    theme = 'vs-dark',\n    language = 'javascript',\n    onCodeChange,\n}: Props) => (\n    <BoxContent>\n        <Header>\n            <Title>{title}</Title>\n        </Header>\n        <Editor\n            height=\"calc(100% - 35px)\"\n            width=\"100%\"\n            value={initialValue}\n            onChange={(value) => {\n                onCodeChange(value || '');\n            }}\n            options={{\n                automaticLayout: true,\n                minimap: {\n                    enabled: false,\n                },\n            }}\n            theme={theme}\n            language={language}\n            defaultValue=\"\"\n        />\n    </BoxContent>\n);\n\nexport default BoxCode;\n","import { useState, useEffect, useRef } from 'react';\nimport type { MutableRefObject } from 'react';\n\ninterface WindowDimensions {\n    width: number;\n    height: number;\n    mobile: boolean;\n}\n\nconst getWindowDimensions = () => {\n    const { innerWidth: width, innerHeight: height } = window;\n\n    const mobile = width < 767 || height < 440;\n\n    return {\n        width,\n        height,\n        mobile,\n    };\n};\n\n// useWindowDimensions - React hook to get window dimensions\nexport const useWindowDimensions = (): WindowDimensions => {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n};\n\nexport function usePrevious<T>(value: T): MutableRefObject<T | undefined>['current'] {\n    const ref = useRef<T>();\n    useEffect(() => {\n        ref.current = value;\n    }, [value]);\n    return ref.current;\n}\n","import styled from 'styled-components';\n\nexport interface BarProps {\n    size: string;\n    isVertical: boolean;\n    hide?: boolean;\n}\n\nexport const Bar = styled.div<BarProps>`\n    z-index: 2;\n    flex: 0.001 0 ${(props) => props.size};\n\n    display: ${(props) => (props.hide ? 'none' : 'block')};\n    cursor: ${(props) => (props.isVertical ? 'row-resize' : 'col-resize')};\n    border-left: 1px solid rgba(255, 255, 255, 0.05);\n    border-right: 1px solid rgba(0, 0, 0, 0.4);\n    background-color: #333642;\n`;\n\ninterface ResizerWrapperProps {\n    direction: 'horizontal' | 'vertical';\n    reverse: boolean;\n}\n\nexport type ResizerWrapperDirection = 'horizontal' | 'vertical';\n\nexport const ResizerWrapper = styled.div<ResizerWrapperProps>`\n    display: flex;\n    overflow: hidden;\n    position: relative;\n    flex-direction: ${(props) => {\n        if (props.direction === 'horizontal') {\n            if (props.reverse) {\n                return 'row-reverse';\n            }\n            return 'row';\n        }\n\n        if (props.reverse) return 'column-reverse';\n\n        return 'column';\n    }};\n    width: 100%;\n    height: 100%;\n`;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Bar } from './styles';\n\ninterface XY {\n    x: number;\n    y: number;\n}\n\ninterface Limit {\n    xmin?: number;\n    ymin?: number;\n    xmax?: number;\n    ymax?: number;\n}\n\ninterface Props {\n    isVertical?: boolean;\n    limit?: Limit;\n    hide?: boolean;\n    size: string;\n    onResize?: (diff: XY) => void;\n    onStop?: (n: XY) => void;\n}\n\nconst ResizerBar: React.FC<Props> = ({\n    isVertical = false,\n    limit = { xmin: 0, ymin: 0, xmax: 9999, ymax: 9999 },\n    hide = false,\n    size = '18px',\n    onResize,\n    onStop,\n}) => {\n    const elem = useRef<HTMLDivElement>(null);\n\n    const xyLimit = { xmin: 0, ymin: 0, xmax: 9999, ymax: 9999, ...limit };\n\n    const [isResizing, setIsResizing] = useState(false);\n    const [startXY, setStartXY] = useState({\n        x: 0,\n        y: 0,\n    });\n\n    const resize = (e: MouseEvent) => {\n        const x = e.clientX;\n        const y = e.clientY;\n\n        const diff = {\n            x: x - startXY.x,\n            y: y - startXY.y,\n        };\n\n        if (onResize) {\n            if (isVertical && y > xyLimit.ymin && y < xyLimit.ymax) {\n                onResize(diff);\n            } else if (x > xyLimit.xmin && x < xyLimit.xmax) {\n                onResize(diff);\n            }\n        }\n    };\n\n    const stopResize = () => {\n        let x = 0;\n        let y = 0;\n\n        if (elem.current) {\n            const dim = elem.current?.getBoundingClientRect();\n\n            x = dim.x;\n            y = dim.y;\n        }\n\n        const diff = {\n            x: x - startXY.x,\n            y: y - startXY.y,\n        };\n\n        if (onStop) onStop(diff);\n        setIsResizing(false);\n    };\n\n    const mouseDownHandler = () => {\n        let x = 0;\n        let y = 0;\n\n        if (elem.current) {\n            const dim = elem.current.getBoundingClientRect();\n\n            x = dim.x;\n            y = dim.y;\n        }\n\n        setIsResizing(true);\n        setStartXY({ x, y });\n    };\n\n    const resizeTouch = (e: TouchEvent) => {\n        const x = e.touches[0].clientX;\n        const y = e.touches[0].clientY;\n\n        const diff = {\n            x: x - startXY.x,\n            y: y - startXY.y,\n        };\n\n        if (onResize) {\n            if (y >= xyLimit.ymin && y <= xyLimit.ymax) onResize(diff);\n        }\n    };\n\n    const stopResizeTouch = (e: any) => {\n        const x = e.touches[0].clientX;\n        const y = e.touches[0].clientY;\n\n        const diff = {\n            x: x - startXY.x,\n            y: y - startXY.y,\n        };\n\n        if (onStop) onStop(diff);\n        setIsResizing(false);\n    };\n\n    const touchStartHandler = (e: React.TouchEvent<HTMLDivElement>) => {\n        const x = e.touches[0].clientX;\n        const y = e.touches[0].clientY;\n\n        setIsResizing(true);\n        setStartXY({ x, y });\n    };\n\n    useEffect(() => {\n        if (isResizing) {\n            window.addEventListener('mousemove', resize, false);\n            window.addEventListener('mouseup', stopResize, false);\n            window.addEventListener('touchmove', resizeTouch, false);\n            window.addEventListener('touchleave', stopResizeTouch, false);\n        } else {\n            window.removeEventListener('mousemove', resize, false);\n            window.removeEventListener('mouseup', stopResize, false);\n            window.removeEventListener('touchmove', resizeTouch, false);\n            window.removeEventListener('touchleave', stopResizeTouch, false);\n        }\n\n        return () => {\n            window.removeEventListener('mousemove', resize, false);\n            window.removeEventListener('mouseup', stopResize, false);\n            window.removeEventListener('touchmove', resizeTouch, false);\n            window.removeEventListener('touchleave', stopResizeTouch, false);\n        };\n    }, [isResizing]);\n\n    return (\n        <Bar\n            ref={elem}\n            size={size}\n            isVertical={isVertical}\n            hide={hide}\n            onTouchStart={touchStartHandler}\n            onMouseDown={mouseDownHandler}\n        />\n    );\n};\n\nexport default ResizerBar;\n","import React, { useState, useEffect } from 'react';\n\ninterface Props {\n    width: number;\n    height: number;\n    currentX: number;\n    currentY: number;\n    diffX: number;\n    diffY: number;\n    hide?: boolean;\n}\n\nconst ResizerContent: React.FC<Props> = ({ children, width, height, currentX, currentY, diffX, diffY, hide }) => {\n    const [previousX, setPreviousX] = useState(currentX);\n    const [previousY, setPreviousY] = useState(currentY);\n    const [widthDiff, setWidthDiff] = useState(0);\n    const [heightDiff, setHeightDiff] = useState(0);\n\n    useEffect(() => {\n        setWidthDiff(0);\n        setPreviousX(currentX);\n    }, [currentX]);\n\n    useEffect(() => {\n        setWidthDiff(0);\n        setPreviousY(currentY);\n    }, [currentY]);\n\n    useEffect(() => {\n        setWidthDiff(diffX);\n    }, [diffX]);\n\n    useEffect(() => {\n        setHeightDiff(diffY);\n    }, [diffY]);\n\n    return (\n        <div\n            style={{\n                position: hide ? 'absolute' : 'relative',\n                visibility: hide ? 'hidden' : 'visible',\n                width: `${((previousX + widthDiff) / width) * 100}%`,\n                height: `${((previousY + heightDiff) / height) * 100}%`,\n            }}\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default ResizerContent;\n","import React from 'react';\nimport ResizerBar from './ResizerBar';\nimport ResizerContent from './ResizerContent';\n\nexport interface XY {\n    x: number;\n    y: number;\n}\n\ninterface Props {\n    hide?: boolean;\n    barSize: string;\n    initialWidth: number;\n    initialHeight: number;\n    disableResizeBar?: boolean;\n    leftDiff?: number;\n    rightDiff?: number;\n    topDiff?: number;\n    bottomDiff?: number;\n    xmax?: number;\n    xmin?: number;\n    ymax?: number;\n    ymin?: number;\n    width: number;\n    height: number;\n    isVertical?: boolean;\n    onResize?: (diff: XY) => void;\n    onStop?: (x: XY) => void;\n}\n\nconst ResizerBlock: React.FC<Props> = ({\n    children,\n    hide = false,\n    barSize,\n    initialWidth,\n    initialHeight,\n    disableResizeBar = false,\n    leftDiff = 0,\n    rightDiff = 0,\n    topDiff = 0,\n    bottomDiff = 0,\n    xmax,\n    xmin,\n    ymax,\n    ymin,\n    width,\n    height,\n    isVertical,\n    onResize,\n    onStop,\n}) => (\n    <>\n        {!disableResizeBar && (\n            <ResizerBar\n                hide={hide}\n                size={barSize}\n                isVertical={isVertical}\n                limit={{ xmax, xmin, ymax, ymin }}\n                onResize={(args) => {\n                    if (onResize) onResize(args);\n                }}\n                onStop={(args) => {\n                    if (onStop) onStop(args);\n                }}\n            />\n        )}\n        <ResizerContent\n            hide={hide}\n            currentX={initialWidth}\n            currentY={initialHeight}\n            width={width}\n            height={height}\n            diffX={-leftDiff + rightDiff}\n            diffY={-topDiff + bottomDiff}\n        >\n            {children}\n        </ResizerContent>\n    </>\n);\n\nexport default ResizerBlock;\n","import React, { useState, useEffect } from 'react';\nimport { usePrevious } from 'utils';\nimport { ResizerWrapperDirection } from './styles';\n\nimport ResizerBlock from './ResizerBlock';\n\nexport interface Boundaries {\n    xmin: number;\n    xmax: number;\n    ymin: number;\n    ymax: number;\n}\n\ninterface Props {\n    reverseFactor: -1 | 1;\n    direction: ResizerWrapperDirection;\n    barSize: number;\n    count: number;\n    height: number;\n    width: number;\n    hide?: boolean[];\n    boundaries: Boundaries;\n}\n\nconst ListResizerBlock: React.FC<Props> = ({\n    children,\n    reverseFactor,\n    barSize,\n    direction,\n    width,\n    height,\n    count,\n    hide = [],\n    boundaries,\n}) => {\n    const isVertical = direction === 'vertical';\n    const [diffControlX, setDiffControlX] = useState(new Array(count).fill(0));\n    const [diffControlY, setDiffControlY] = useState(new Array(count).fill(0));\n    const [sizeControl, setSizeControl] = useState(\n        new Array(count).fill({\n            width: (width - barSize * (count - 1)) / count,\n            height: (height - barSize * (count - 1)) / count,\n        }),\n    );\n\n    const previousWidth = usePrevious(width) || width;\n    const previousHeight = usePrevious(height) || height;\n\n    useEffect(() => {\n        const resizeDiff = (width - previousWidth) / count;\n        setSizeControl([...sizeControl.map((w) => ({ ...w, width: w.width + resizeDiff }))]);\n    }, [width]);\n\n    useEffect(() => {\n        const resizeDiff = (height - previousHeight) / count;\n        setSizeControl([...sizeControl.map((w) => ({ ...w, height: w.height + resizeDiff }))]);\n    }, [height]);\n\n    return (\n        <>\n            {React.Children.map(children, (child, index) => (\n                <ResizerBlock\n                    isVertical={isVertical}\n                    barSize={`${barSize}px`}\n                    hide={hide[index]}\n                    width={width}\n                    height={height}\n                    topDiff={diffControlY[index]}\n                    bottomDiff={diffControlY[index + 1]}\n                    leftDiff={diffControlX[index]}\n                    rightDiff={diffControlX[index + 1]}\n                    onResize={({ x, y }) => {\n                        if (isVertical) {\n                            const newDiff = [...diffControlY];\n                            newDiff[index] = reverseFactor * y;\n                            setDiffControlY(newDiff);\n                        } else {\n                            const newDiff = [...diffControlX];\n                            newDiff[index] = reverseFactor * x;\n                            setDiffControlX(newDiff);\n                        }\n                    }}\n                    onStop={({ x, y }) => {\n                        if (isVertical) {\n                            const newDiff = [...diffControlY];\n                            newDiff[index] = 0;\n                            setDiffControlY(newDiff);\n\n                            const newSizeControl = [...sizeControl];\n\n                            if (newSizeControl[index - 1]) newSizeControl[index - 1].height += reverseFactor * y;\n                            newSizeControl[index].height -= reverseFactor * y;\n\n                            setSizeControl(newSizeControl);\n                        } else {\n                            const newDiff = [...diffControlX];\n                            newDiff[index] = 0;\n                            setDiffControlX(newDiff);\n\n                            const newSizeControl = [...sizeControl];\n\n                            if (newSizeControl[index - 1]) newSizeControl[index - 1].width += reverseFactor * x;\n                            newSizeControl[index].width -= reverseFactor * x;\n\n                            setSizeControl(newSizeControl);\n                        }\n                    }}\n                    disableResizeBar={index === 0}\n                    initialHeight={isVertical ? sizeControl[index].height : height}\n                    initialWidth={isVertical ? width : sizeControl[index].width}\n                    xmax={\n                        index === count - 1\n                            ? boundaries.xmax\n                            : sizeControl\n                                  .filter((_, idx) => idx <= index + 1)\n                                  .reduce(\n                                      (accumulator, currentValue) => accumulator + currentValue.width + barSize,\n                                      -barSize,\n                                  )\n                    }\n                    xmin={\n                        index <= 1\n                            ? boundaries.xmin\n                            : sizeControl\n                                  .filter((_, idx) => idx < index - 1)\n                                  .reduce((accumulator, currentValue) => accumulator + currentValue.width + barSize, 0)\n                    }\n                    ymax={\n                        index === count - 1\n                            ? boundaries.ymax - barSize\n                            : sizeControl\n                                  .filter((_, idx) => idx <= index)\n                                  .reduce(\n                                      (accumulator, currentValue) => accumulator + currentValue.height,\n                                      boundaries.ymin,\n                                  )\n                    }\n                    ymin={\n                        index <= 1\n                            ? boundaries.ymin\n                            : sizeControl\n                                  .filter((_, idx) => idx < index - 1)\n                                  .reduce((accumulator, currentValue) => accumulator + currentValue.height + barSize, 0)\n                    }\n                >\n                    {child}\n                </ResizerBlock>\n            ))}\n        </>\n    );\n};\n\nexport default ListResizerBlock;\n","/* eslint-disable @typescript-eslint/ban-types */\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport useResizeObserver from 'use-resize-observer';\nimport ListResizerBlock, { Boundaries } from './ListResizerBlock';\nimport { ResizerWrapper, ResizerWrapperDirection } from './styles';\n\ninterface Props {\n    direction?: ResizerWrapperDirection;\n    reverse?: boolean;\n    barSize: number;\n}\n\nconst useMergedCallbackRef = (...callbacks: Function[]) => {\n    const callbacksRegistry = useRef<Function[]>(callbacks);\n\n    useEffect(() => {\n        callbacksRegistry.current = callbacks;\n    }, [...callbacks]);\n\n    return useCallback((element) => {\n        callbacksRegistry.current.forEach((callback) => callback(element));\n    }, []);\n};\n\nconst Resizer: React.FC<Props> = ({ children, direction = 'horizontal', reverse = false, barSize }) => {\n    const countElements = React.Children.count(children);\n\n    const [boundaries, setBoundaries] = useState<Boundaries>({ xmin: 0, xmax: 9999, ymin: 0, ymax: 9999 });\n    const { ref, width, height } = useResizeObserver<HTMLDivElement>();\n\n    const mergedCallbackRef = useMergedCallbackRef(ref, (element: HTMLDivElement) => {\n        if (element) {\n            const dim = element.getBoundingClientRect();\n            setBoundaries({ xmin: dim.left, xmax: dim.left + dim.width, ymin: dim.top, ymax: dim.top + dim.height });\n        }\n    });\n\n    return (\n        <ResizerWrapper key={direction} ref={mergedCallbackRef} direction={direction} reverse={reverse}>\n            {width && height && (\n                <ListResizerBlock\n                    reverseFactor={reverse ? -1 : 1}\n                    barSize={barSize}\n                    direction={direction}\n                    count={countElements}\n                    height={height}\n                    width={width}\n                    boundaries={boundaries}\n                >\n                    {children}\n                </ListResizerBlock>\n            )}\n        </ResizerWrapper>\n    );\n};\n\nexport default Resizer;\n","import styled from 'styled-components';\n\nexport const TitleText = styled.h2`\n    font-family: Lato, Lucida Grande, Lucida Sans Unicode, Tahoma, Sans-Serif;\n    color: white;\n    font-size: 1.3rem;\n    font-weight: 700;\n`;\n\nexport const TitleWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    margin: 15px;\n`;\n\nexport const TitleEditInput = styled.input`\n    width: 90px;\n`;\n\nexport const EditButton = styled.button`\n    color: white;\n    background-color: transparent;\n    border: none;\n    padding: 5px;\n    margin: 3px;\n`;\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen } from '@fortawesome/free-solid-svg-icons';\nimport { EditButton, TitleText, TitleEditInput, TitleWrapper } from './styles';\n\ninterface Props {\n    placeholder?: string;\n    onTitleChange?: (title: string) => void;\n}\n\nconst TitleInput: React.FC<Props> = ({ placeholder = '', onTitleChange }) => {\n    const [title, setTitle] = useState('');\n    const [editTitle, setEditTitle] = useState(false);\n\n    return (\n        <TitleWrapper>\n            {editTitle ? (\n                <TitleEditInput\n                    autoFocus\n                    onBlur={() => {\n                        setEditTitle(false);\n                    }}\n                    onChange={(e) => {\n                        setTitle(e.target.value);\n                        if (onTitleChange) onTitleChange(e.target.value);\n                    }}\n                    value={title}\n                    type=\"text\"\n                />\n            ) : (\n                <TitleText>{title || placeholder}</TitleText>\n            )}\n            <EditButton onClick={() => setEditTitle(true)}>\n                <FontAwesomeIcon icon={faPen} />\n            </EditButton>\n        </TitleWrapper>\n    );\n};\n\nexport default TitleInput;\n","import styled from 'styled-components';\n\nexport const CodeNav = styled.div`\n    display: flex;\n    position: absolute;\n    z-index: 2;\n    width: 100%;\n    justify-content: center;\n    flex-direction: row;\n`;\n\ninterface ButtonNavProps {\n    isActive: boolean;\n}\n\nexport const ButtonNav = styled.button<ButtonNavProps>`\n    background-color: #444857;\n    color: white;\n    border: rgba(0, 0, 0, 0.09);\n    font-size: 0.8rem;\n    padding: 4px 16px;\n    line-height: 20px;\n    margin-right: 1px;\n    border-top: ${(props) => (props.isActive ? '1px solid white' : '1px solid gray')};\n    &:active {\n        transform: translateY(1px);\n        border: none;\n    }\n    &:focus {\n        outline: none;\n    }\n`;\n","import React, { useState } from 'react';\n\nimport { ButtonNav, CodeNav } from './styles';\n\ninterface TabsControl {\n    html: boolean;\n    js: boolean;\n    css: boolean;\n}\n\ninterface Props {\n    onTabChange: (tab: string, tabs: TabsControl) => void;\n}\n\nconst MobileEditorNav: React.FC<Props> = ({ onTabChange }) => {\n    const [activeTabs, setActiveTabs] = useState<TabsControl>({ html: true, js: false, css: false });\n\n    const handleTabClick = (tab: string, tabs: TabsControl) => {\n        setActiveTabs(tabs);\n        onTabChange(tab, tabs);\n    };\n\n    return (\n        <CodeNav>\n            <ButtonNav\n                isActive={activeTabs.html}\n                onClick={() => {\n                    handleTabClick('html', { ...activeTabs, ...{ html: true, js: false, css: false } });\n                }}\n            >\n                HTML\n            </ButtonNav>\n            <ButtonNav\n                isActive={activeTabs.js}\n                onClick={() => {\n                    handleTabClick('js', { ...activeTabs, ...{ html: false, js: true, css: false } });\n                }}\n            >\n                JS\n            </ButtonNav>\n            <ButtonNav\n                isActive={activeTabs.css}\n                onClick={() => {\n                    handleTabClick('css', { ...activeTabs, ...{ html: false, js: false, css: true } });\n                }}\n            >\n                CSS\n            </ButtonNav>\n        </CodeNav>\n    );\n};\n\nexport default MobileEditorNav;\n","import styled from 'styled-components';\n\ninterface Props {\n    margin?: string;\n}\n\nexport const Button = styled.button<Props>`\n    background-color: #444857;\n    color: white;\n    font-weight: 300;\n    border-radius: 5px;\n    border: rgba(0, 0, 0, 0.09);\n    font-size: 1rem;\n    padding: 10px 15px;\n    line-height: 20px;\n    margin: ${(props) => props.margin};\n\n    &:active {\n        transform: translateY(1px);\n        border: none;\n    }\n    &:focus {\n        outline: none;\n    }\n`;\n","import styled from 'styled-components';\n\nexport const LayoutEditor = styled.div`\n    position: absolute;\n    display: flex;\n    justify-content: space-around;\n    z-index: 3;\n    top: 45px;\n    right: 0px;\n    border-radius: 5px;\n    padding: 20px;\n    background-color: black;\n`;\n\nexport const LayoutButtonWrapper = styled.div`\n    position: relative;\n    margin: 5px;\n`;\n","import React, { useState } from 'react';\nimport { Button } from 'components/Styled';\nimport { LayoutEditor, LayoutButtonWrapper } from './styles';\n\ninterface Props {\n    onClick?: (e: React.MouseEvent) => void;\n}\n\nconst LayoutButton: React.FC<Props> = ({ children, onClick }) => {\n    const [showLayouts, setShowLayouts] = useState(false);\n\n    return (\n        <LayoutButtonWrapper>\n            <Button\n                onClick={(e) => {\n                    setShowLayouts(!showLayouts);\n                    if (onClick) onClick(e);\n                }}\n            >\n                Change View\n            </Button>\n            {showLayouts && <LayoutEditor>{children}</LayoutEditor>}\n        </LayoutButtonWrapper>\n    );\n};\n\nexport default LayoutButton;\n","export type Action = { type: string; payload: string };\n\nexport type SET_JS = { type: 'SET_JS'; payload: string };\n\nexport const setJS = (code: string): SET_JS => ({\n    type: 'SET_JS',\n    payload: code,\n});\n\nexport type SET_CSS = { type: 'SET_CSS'; payload: string };\n\nexport const setCSS = (code: string): SET_CSS => ({\n    type: 'SET_CSS',\n    payload: code,\n});\n\nexport type SET_HTML = { type: 'SET_HTML'; payload: string };\n\nexport const setHTML = (code: string): SET_HTML => ({\n    type: 'SET_HTML',\n    payload: code,\n});\n\nexport type SET_LAYOUT_1 = { type: 'SET_LAYOUT_1' };\n\nexport const setLayout = (): SET_LAYOUT_1 => ({\n    type: 'SET_LAYOUT_1',\n});\n\nexport type SET_LAYOUT_2 = { type: 'SET_LAYOUT_2' };\n\nexport const setLayout2 = (): SET_LAYOUT_2 => ({\n    type: 'SET_LAYOUT_2',\n});\n\nexport type SET_LAYOUT_3 = { type: 'SET_LAYOUT_3' };\n\nexport const setLayout3 = (): SET_LAYOUT_3 => ({\n    type: 'SET_LAYOUT_3',\n});\n","import styled from 'styled-components';\nimport { LayoutButton } from 'components';\nimport { Button } from 'components/Styled';\n\nexport const MainHeader = styled.header`\n    display: flex;\n    height: 65px;\n    padding: 5px 15px;\n    background-color: #1e1f26;\n    align-items: center;\n`;\n\nexport const HeaderTools = styled.div`\n    display: flex;\n    padding: 5px;\n    margin-left: auto;\n`;\n\nexport const Logo = styled.div`\n    background-image: url('/code-playground/logo192.png');\n    width: 30px;\n    height: 30px;\n    background-size: cover;\n`;\n\nexport const DownloadButton = styled(Button)`\n    margin: 5px;\n    & > span {\n        margin-left: 5px;\n    }\n    @media (max-width: 767px) {\n        & > span {\n            display: none;\n        }\n    }\n`;\n\nexport const HideMobile = styled.span`\n    @media (max-width: 767px) {\n        & > * {\n            display: none;\n        }\n    }\n`;\n","import React, { useState } from 'react';\nimport JSZip from 'jszip';\nimport FileSaver from 'file-saver';\nimport { ApplicationState } from 'store/store';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CodeState } from 'reducers/codeReducer';\nimport { TitleInput, LayoutButton } from 'components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from 'components/Styled';\nimport { setLayout, setLayout2, setLayout3 } from 'actions/actions';\nimport { Logo, HeaderTools, MainHeader, HideMobile, DownloadButton } from './styles';\n\nconst Header: React.FC = () => {\n    const defaultTitle = 'Untitled';\n\n    const dispatch = useDispatch();\n\n    const { js, html, css } = useSelector<ApplicationState, CodeState>((state) => state.code);\n\n    const [fileName, setFileName] = useState('');\n\n    return (\n        <>\n            <MainHeader>\n                <Logo />\n                <TitleInput\n                    placeholder={defaultTitle}\n                    onTitleChange={(title) => {\n                        setFileName(title);\n                    }}\n                />\n                <HeaderTools>\n                    <HideMobile>\n                        <LayoutButton>\n                            <Button margin=\"5px\" onClick={() => dispatch(setLayout2())}>\n                                Left Code\n                            </Button>\n                            <Button margin=\"5px\" onClick={() => dispatch(setLayout())}>\n                                Top Code\n                            </Button>\n                            <Button margin=\"5px\" onClick={() => dispatch(setLayout3())}>\n                                Right Code\n                            </Button>\n                        </LayoutButton>\n                    </HideMobile>\n                    <DownloadButton\n                        onClick={() => {\n                            const zip = new JSZip();\n                            zip.file('index.css', css);\n                            zip.file('main.js', js);\n                            zip.file('index.html', html);\n                            zip.generateAsync({ type: 'blob' }).then((content) => {\n                                FileSaver.saveAs(content, `${fileName || defaultTitle}.zip`);\n                            });\n                        }}\n                    >\n                        <FontAwesomeIcon icon={faDownload} />\n                        <span>Download</span>\n                    </DownloadButton>\n                </HeaderTools>\n            </MainHeader>\n        </>\n    );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const Content = styled.div`\n    height: 100%;\n`;\n\nexport const Preview = styled.iframe`\n    user-select: none;\n    pointer-events: none;\n    width: 100%;\n    height: 100%;\n`;\n","import React, { useState } from 'react';\nimport { Resizer, BoxCode, MobileEditorNav } from 'components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CodeState } from 'reducers/codeReducer';\nimport { LayoutState } from 'reducers/layoutReducer';\nimport { ApplicationState } from 'store/store';\nimport { setCSS, setHTML, setJS } from 'actions/actions';\nimport { ResizerWrapperDirection } from 'components/Resizer/styles';\nimport { useWindowDimensions } from 'utils';\nimport { Preview } from './styles';\n\nconst SimpleCodeContentMobile: React.FC = () => {\n    const { js, html, css } = useSelector<ApplicationState, CodeState>((state) => state.code);\n    const dispatch = useDispatch();\n    const [currentTab, setCurrentTab] = useState('html');\n\n    const getBoxCode = (tab: string) => {\n        switch (tab) {\n            case 'js':\n                return <BoxCode title=\"JS\" initialValue={js} onCodeChange={(value) => dispatch(setJS(value))} />;\n\n            case 'css':\n                return (\n                    <BoxCode\n                        title=\"CSS\"\n                        initialValue={css}\n                        language=\"css\"\n                        onCodeChange={(value) => dispatch(setCSS(value))}\n                    />\n                );\n\n            default:\n                return (\n                    <BoxCode\n                        title=\"HTML\"\n                        initialValue={html}\n                        language=\"html\"\n                        onCodeChange={(value) => dispatch(setHTML(value))}\n                    />\n                );\n        }\n    };\n\n    return (\n        <>\n            <MobileEditorNav\n                onTabChange={(tab) => {\n                    setCurrentTab(tab);\n                }}\n            />\n            <Resizer barSize={18} direction=\"vertical\">\n                {getBoxCode(currentTab)}\n                <Preview\n                    sandbox=\"allow-downloads allow-forms allow-modals allow-pointer-lock allow-popups allow-presentation allow-same-origin allow-scripts allow-top-navigation-by-user-activation\"\n                    title=\"preview\"\n                    srcDoc={`${html} <style>${css}</style><script>${js}</script>`}\n                />\n            </Resizer>\n        </>\n    );\n};\n\nconst SimpleCodeContent: React.FC = () => {\n    const { mobile } = useWindowDimensions();\n    const { js, html, css } = useSelector<ApplicationState, CodeState>((state) => state.code);\n    const layout = useSelector<ApplicationState, LayoutState>((state) => state.layout);\n\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            {mobile ? (\n                <SimpleCodeContentMobile />\n            ) : (\n                <Resizer barSize={18} direction={layout.main as ResizerWrapperDirection} reverse={layout.reverse}>\n                    <Resizer barSize={18} direction={layout.code as ResizerWrapperDirection}>\n                        <BoxCode\n                            title=\"HTML\"\n                            initialValue={html}\n                            language=\"html\"\n                            onCodeChange={(value) => dispatch(setHTML(value))}\n                        />\n                        <BoxCode title=\"JS\" initialValue={js} onCodeChange={(value) => dispatch(setJS(value))} />\n                        <BoxCode\n                            title=\"CSS\"\n                            initialValue={css}\n                            language=\"css\"\n                            onCodeChange={(value) => dispatch(setCSS(value))}\n                        />\n                    </Resizer>\n                    <Preview\n                        sandbox=\"allow-downloads allow-forms allow-modals allow-pointer-lock allow-popups allow-presentation allow-same-origin allow-scripts allow-top-navigation-by-user-activation\"\n                        title=\"preview\"\n                        srcDoc={`${html} <style>${css}</style><script>${js}</script>`}\n                    />\n                </Resizer>\n            )}\n        </>\n    );\n};\n\nexport default SimpleCodeContent;\n","import React from 'react';\nimport { Header, SimpleCodeContent } from 'containers';\n\nconst SimpleCode: React.FC = () => (\n    <>\n        <Header />\n        <SimpleCodeContent />\n    </>\n);\n\nexport default SimpleCode;\n","import { Action } from '../actions/actions';\n\nexport interface CodeState {\n    js: string;\n    css: string;\n    html: string;\n}\n\nconst initialState = {\n    js: '',\n    css: '',\n    html: '',\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const codeReducer = (state: CodeState = initialState, action: Action) => {\n    switch (action.type) {\n        case 'SET_JS': {\n            return { ...state, js: action.payload };\n        }\n        case 'SET_CSS': {\n            return { ...state, css: action.payload };\n        }\n        case 'SET_HTML': {\n            return { ...state, html: action.payload };\n        }\n        default:\n            return state;\n    }\n};\n","import { Action } from '../actions/actions';\n\nexport interface LayoutState {\n    main: string;\n    code: string;\n    reverse: boolean;\n}\n\nconst initialState = {\n    main: 'vertical',\n    code: 'horizontal',\n    reverse: false,\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const layoutReducer = (state: LayoutState = initialState, action: Action) => {\n    switch (action.type) {\n        case 'SET_LAYOUT_1': {\n            return { main: 'vertical', code: 'horizontal', reverse: false };\n        }\n        case 'SET_LAYOUT_2': {\n            return { main: 'horizontal', code: 'vertical', reverse: false };\n        }\n        case 'SET_LAYOUT_3': {\n            return { main: 'horizontal', code: 'vertical', reverse: true };\n        }\n        default:\n            return state;\n    }\n};\n","import { createStore, combineReducers } from 'redux';\n\nimport { codeReducer, CodeState } from '../reducers/codeReducer';\nimport { layoutReducer, LayoutState } from '../reducers/layoutReducer';\n\nexport interface ApplicationState {\n    code: CodeState;\n    layout: LayoutState;\n}\n\nexport const store = createStore(\n    combineReducers<ApplicationState>({ code: codeReducer, layout: layoutReducer }),\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SimpleCodeView from 'views/SimpleCode';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <SimpleCodeView />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}