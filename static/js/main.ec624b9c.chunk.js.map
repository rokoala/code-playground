{"version":3,"sources":["components/BoxCode/styles.ts","components/BoxCode/index.tsx","components/Resizer/styles.ts","components/Resizer/ResizerBar.tsx","components/Resizer/ResizerContent.tsx","components/TitleInput/styles.ts","components/TitleInput/index.tsx","utils/index.ts","layout/BoxCodeBlock/styles.ts","layout/BoxCodeBlock/index.tsx","components/Styled/Button.ts","layout/Header/styles.ts","layout/Header/index.tsx","views/styles.ts","views/SimpleCode.tsx","actions/actions.ts","reducers/codeReducer.ts","store/store.ts","index.tsx"],"names":["Title","styled","h2","Header","div","BoxContent","BoxCode","title","theme","language","onCodeChange","height","width","onChange","value","options","automaticLayout","defaultValue","Bar","props","isVertical","Resizer","limit","xmin","ymin","xmax","ymax","onResize","onStop","xyLimit","useState","isResizing","setIsResizing","x","y","startXY","setStartXY","resize","e","clientX","clientY","diff","stopResize","useEffect","window","addEventListener","removeEventListener","onMouseDown","ResizerContent","children","currentX","diffX","previousX","setPreviousX","widthDiff","setWidthDiff","style","TitleText","TitleWrapper","TitleEditInput","input","EditButton","button","TitleInput","placeholder","onTitleChange","setTitle","editTitle","setEditTitle","autoFocus","onBlur","target","type","onClick","getWindowDimensions","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","CodeBlock","BoxCodeBlock","setJSCode","setHTMLCode","setCSSCode","dimensionsHTML","setDimensionsHTML","dimensionsJS","setDimensionsJS","dimensionsCSS","setDimensionsCSS","diff1","setDiff1","diff2","setDiff2","ResizerBar","Button","MainHeader","header","HeaderTools","defaultTitle","useSelector","state","js","html","css","fileName","setFileName","zip","JSZip","file","generateAsync","then","content","FileSaver","saveAs","Content","Preview","iframe","SimpleCode","dispatch","useDispatch","boxCodeBlockDim","setBoxCodeBlockDim","code","payload","setCSS","setJS","setHTML","sandbox","srcDoc","initialState","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec624b9c.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n    font-family: 'Lato', 'Lucida Grande', 'Lucida Sans Unicode', Tahoma, Sans-Serif;\n    white-space: nowrap;\n    font-weight: bold;\n    color: #aaaebc;\n    margin: 0;\n    font-size: 1.3em;\n    display: inline-block;\n    padding-left: 2px;\n    vertical-align: middle;\n    -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n    -khtml-user-select: none; /* Konqueror HTML */\n    -moz-user-select: none; /* Old versions of Firefox */\n    -ms-user-select: none; /* Internet Explorer/Edge */\n    user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome, Edge, Opera and Firefox */\n`;\n\nexport const Header = styled.div`\n    background: rgba(0, 0, 0, 0.1);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.05);\n    padding: 5px;\n`;\n\nexport const BoxContent = styled.div`\n    display: flex;\n    background: #1d1e22;\n    height: 100%;\n    min-width: 0;\n    flex-direction: column;\n`;\n","import React from 'react';\nimport Editor from '@monaco-editor/react';\nimport { BoxContent, Title, Header } from './styles';\n\ninterface Props {\n    title: string;\n    language?: string;\n    theme?: string;\n    onCodeChange: (code: string) => void;\n}\n\nconst BoxCode: React.FC<Props & React.HTMLAttributes<HTMLDivElement>> = ({\n    title = '',\n    theme = 'vs-dark',\n    language = 'javascript',\n    onCodeChange,\n}: Props) => (\n    <BoxContent>\n        <Header>\n            <Title>{title}</Title>\n        </Header>\n        <Editor\n            height=\"calc(100% - 35px)\"\n            width=\"100%\"\n            onChange={(value) => {\n                onCodeChange(value || '');\n            }}\n            options={{\n                automaticLayout: true,\n            }}\n            theme={theme}\n            language={language}\n            defaultValue=\"\"\n        />\n    </BoxContent>\n);\n\nexport default BoxCode;\n","import styled from 'styled-components';\n\ninterface BarProps {\n    isVertical: boolean;\n}\n\nexport const Bar = styled.div<BarProps>`\n    z-index: 2;\n    cursor: ${(props) => (props.isVertical ? 'row-resize' : 'col-resize')};\n    min-width: 18px;\n    min-height: 18px;\n    border-left: 1px solid rgba(255, 255, 255, 0.05);\n    border-right: 1px solid rgba(0, 0, 0, 0.4);\n    background-color: #333642;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Bar } from './styles';\n\ninterface XY {\n    x: number;\n    y: number;\n}\n\ninterface Limit {\n    xmin?: number;\n    ymin?: number;\n    xmax?: number;\n    ymax?: number;\n}\n\ninterface Props {\n    isVertical?: boolean;\n    limit?: Limit;\n    onResize?: (diff: XY) => void;\n    onStop?: (n: XY) => void;\n}\n\nconst Resizer: React.FC<Props> = ({\n    isVertical = false,\n    limit = { xmin: 0, ymin: 0, xmax: 9999, ymax: 9999 },\n    onResize,\n    onStop,\n}) => {\n    const xyLimit = { xmin: 0, ymin: 0, xmax: 9999, ymax: 9999, ...limit };\n\n    const [isResizing, setIsResizing] = useState(false);\n    const [startXY, setStartXY] = useState({\n        x: 0,\n        y: 0,\n    });\n\n    const resize = (e: MouseEvent) => {\n        const x = e.clientX;\n        const y = e.clientY;\n\n        const diff = {\n            x: x - startXY.x,\n            y: y - startXY.y,\n        };\n\n        if (onResize) {\n            if (y >= xyLimit.ymin && y <= xyLimit.ymax) onResize(diff);\n        }\n    };\n\n    const stopResize = (e: MouseEvent) => {\n        const x = e.clientX;\n        const y = e.clientY;\n\n        const diff = {\n            x: x - startXY.x,\n            y: y - startXY.y,\n        };\n\n        if (onStop) onStop(diff);\n        setIsResizing(false);\n    };\n\n    const mouseDownHandler = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        const x = e.clientX;\n        const y = e.clientY;\n\n        setIsResizing(true);\n        setStartXY({ x, y });\n    };\n\n    useEffect(() => {\n        if (isResizing) {\n            window.addEventListener('mousemove', resize, false);\n            window.addEventListener('mouseup', stopResize, false);\n        } else {\n            window.removeEventListener('mousemove', resize, false);\n            window.removeEventListener('mouseup', stopResize, false);\n        }\n\n        return () => {\n            window.removeEventListener('mousemove', resize, false);\n            window.removeEventListener('mouseup', stopResize, false);\n        };\n    }, [isResizing]);\n\n    return <Bar isVertical={isVertical} onMouseDown={mouseDownHandler} />;\n};\n\nexport default Resizer;\n","import React, { useState, useEffect } from 'react';\n\ninterface Props {\n    currentX: number;\n    diffX: number;\n}\n\nconst ResizerContent: React.FC<Props> = ({ children, currentX, diffX }) => {\n    const [previousX, setPreviousX] = useState(currentX);\n    const [widthDiff, setWidthDiff] = useState(0);\n\n    useEffect(() => {\n        setWidthDiff(0);\n        setPreviousX(currentX);\n    }, [currentX]);\n\n    useEffect(() => {\n        setWidthDiff(diffX);\n    }, [diffX]);\n\n    return <div style={{ width: previousX + widthDiff }}>{children}</div>;\n};\n\nexport default ResizerContent;\n","import styled from 'styled-components';\n\nexport const TitleText = styled.h2`\n    font-family: Lato, Lucida Grande, Lucida Sans Unicode, Tahoma, Sans-Serif;\n    color: white;\n    font-size: 1.3rem;\n    font-weight: 700;\n`;\n\nexport const TitleWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    margin: 15px;\n`;\n\nexport const TitleEditInput = styled.input`\n    width: 90px;\n`;\n\nexport const EditButton = styled.button`\n    color: white;\n    background-color: transparent;\n    border: none;\n    padding: 5px;\n    margin: 3px;\n`;\n","import React, { useState } from 'react';\nimport { EditButton, TitleText, TitleEditInput, TitleWrapper } from './styles';\n\ninterface Props {\n    placeholder?: string;\n    onTitleChange?: (title: string) => void;\n}\n\nconst TitleInput: React.FC<Props> = ({ placeholder = '', onTitleChange }) => {\n    const [title, setTitle] = useState('');\n    const [editTitle, setEditTitle] = useState(false);\n\n    return (\n        <TitleWrapper>\n            {editTitle ? (\n                <TitleEditInput\n                    autoFocus\n                    onBlur={() => {\n                        setEditTitle(false);\n                    }}\n                    onChange={(e) => {\n                        setTitle(e.target.value);\n                        if (onTitleChange) onTitleChange(e.target.value);\n                    }}\n                    value={title}\n                    type=\"text\"\n                />\n            ) : (\n                <TitleText>{title || placeholder}</TitleText>\n            )}\n            <EditButton onClick={() => setEditTitle(true)}>edit</EditButton>\n        </TitleWrapper>\n    );\n};\n\nexport default TitleInput;\n","import { useState, useEffect } from 'react';\n\ninterface WindowDimensions {\n    width: number;\n    height: number;\n}\n\nconst getWindowDimensions = () => {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height,\n    };\n};\n\n// useWindowDimensions - React hook to get window dimensions\nexport const useWindowDimensions = ():WindowDimensions => {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n};","import styled from 'styled-components';\n\ninterface CodeBlockProps {\n    height: number;\n}\n\nexport const CodeBlock = styled.div<CodeBlockProps>`\n    display: flex;\n    height: ${(props) => `${props.height}px`};\n    flex-direction: row;\n    width: 100%;\n`;\n","import React, { useState } from 'react';\nimport { BoxCode, ResizerBar, ResizerContent } from 'components';\nimport { useWindowDimensions } from 'utils';\nimport { CodeBlock } from './styles';\n\ninterface Props {\n    height?: number;\n    setJSCode: (code: string) => void;\n    setHTMLCode: (code: string) => void;\n    setCSSCode: (code: string) => void;\n}\n\nconst BoxCodeBlock: React.FC<Props> = ({ height = 300, setJSCode, setHTMLCode, setCSSCode }) => {\n    const { width } = useWindowDimensions();\n\n    const [dimensionsHTML, setDimensionsHTML] = useState(width / 3);\n    const [dimensionsJS, setDimensionsJS] = useState(width / 3);\n    const [dimensionsCSS, setDimensionsCSS] = useState(width / 3);\n    const [diff1, setDiff1] = useState(0);\n    const [diff2, setDiff2] = useState(0);\n\n    return (\n        <CodeBlock height={height}>\n            <ResizerBar />\n            <ResizerContent currentX={dimensionsHTML} diffX={diff1}>\n                <BoxCode title=\"HTML\" language=\"html\" onCodeChange={(value) => setHTMLCode(value)} />\n            </ResizerContent>\n            <ResizerBar\n                onResize={({ x }) => {\n                    setDiff1(x);\n                }}\n                onStop={({ x }) => {\n                    setDiff1(0);\n                    setDimensionsHTML(dimensionsHTML + x);\n                    setDimensionsJS(dimensionsJS - x);\n                }}\n            />\n            <ResizerContent currentX={dimensionsJS} diffX={-diff1 + diff2}>\n                <BoxCode title=\"JS\" onCodeChange={(value) => setJSCode(value)} />\n            </ResizerContent>\n            <ResizerBar\n                onResize={({ x }) => {\n                    setDiff2(x);\n                }}\n                onStop={({ x }) => {\n                    setDiff2(0);\n                    setDimensionsJS(dimensionsJS + x);\n                    setDimensionsCSS(dimensionsCSS - x);\n                }}\n            />\n            <ResizerContent currentX={dimensionsCSS} diffX={-diff2}>\n                <BoxCode title=\"CSS\" language=\"css\" onCodeChange={(value) => setCSSCode(value)} />\n            </ResizerContent>\n        </CodeBlock>\n    );\n};\n\nexport default BoxCodeBlock;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n    background-color: #444857;\n    color: white;\n    font-weight: 300;\n    border-radius: 5px;\n    border: rgba(0, 0, 0, 0.09);\n    font-size: 1rem;\n    padding: 10px 15px;\n    line-height: 20px;\n\n    &:active {\n        transform: translateY(1px);\n        border: none;\n    }\n    &:focus {\n        outline: none;\n    }\n`;\n","import styled from 'styled-components';\n\nexport const MainHeader = styled.header`\n    display: flex;\n    height: 65px;\n    background-color: #1e1f26;\n    align-items: center;\n`;\n\nexport const HeaderTools = styled.div`\n    padding: 5px;\n    margin-left: auto;\n`;\n","import React, { useState } from 'react';\nimport JSZip from 'jszip';\nimport FileSaver from 'file-saver';\nimport { useSelector } from 'react-redux';\nimport { CodeState } from 'reducers/codeReducer';\nimport { Button } from 'components/Styled';\nimport { TitleInput } from 'components';\nimport { HeaderTools, MainHeader } from './styles';\n\nconst Header: React.FC = () => {\n    const defaultTitle = 'Untitled';\n\n    const { js, html, css } = useSelector<CodeState, CodeState>((state) => state);\n\n    const [fileName, setFileName] = useState('');\n\n    return (\n        <>\n            <MainHeader>\n                <TitleInput\n                    placeholder={defaultTitle}\n                    onTitleChange={(title) => {\n                        setFileName(title);\n                    }}\n                />\n                <HeaderTools>\n                    <Button\n                        onClick={() => {\n                            const zip = new JSZip();\n                            zip.file('index.css', css);\n                            zip.file('main.js', js);\n                            zip.file('index.html', html);\n                            zip.generateAsync({ type: 'blob' }).then((content) => {\n                                FileSaver.saveAs(content, `${fileName || defaultTitle}.zip`);\n                            });\n                        }}\n                    >\n                        Download\n                    </Button>\n                </HeaderTools>\n            </MainHeader>\n        </>\n    );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const Content = styled.div`\n    display: flex;\n    height: 100%;\n    flex-direction: column;\n`;\n\nexport const Preview = styled.iframe`\n    user-select: none;\n    pointer-events: none;\n    width: 100%;\n    height: 100%;\n`;\n","import React, { useState } from 'react';\nimport { BoxCodeBlock, Header } from 'layout';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CodeState } from 'reducers/codeReducer';\nimport { setCSS, setHTML, setJS } from 'actions/actions';\nimport { ResizerBar } from 'components';\nimport { useWindowDimensions } from 'utils';\nimport { Content, Preview } from './styles';\n\nconst SimpleCode: React.FC = () => {\n    const { js, html, css } = useSelector<CodeState, CodeState>((state) => state);\n    const { height } = useWindowDimensions();\n\n    const dispatch = useDispatch();\n\n    const [boxCodeBlockDim, setBoxCodeBlockDim] = useState({ width: 0, height: 350 });\n\n    return (\n        <>\n            <Header />\n            <Content>\n                <BoxCodeBlock\n                    height={boxCodeBlockDim.height}\n                    setCSSCode={(code) => {\n                        dispatch(setCSS(code));\n                    }}\n                    setJSCode={(code) => {\n                        dispatch(setJS(code));\n                    }}\n                    setHTMLCode={(code) => {\n                        dispatch(setHTML(code));\n                    }}\n                />\n                <ResizerBar\n                    limit={{ ymin: 150, ymax: height - 100 }}\n                    onResize={({ y }) => {\n                        setBoxCodeBlockDim({ ...boxCodeBlockDim, height: boxCodeBlockDim.height + y });\n                    }}\n                    isVertical\n                />\n                <Preview\n                    sandbox=\"allow-downloads allow-forms allow-modals allow-pointer-lock allow-popups allow-presentation allow-same-origin allow-scripts allow-top-navigation-by-user-activation\"\n                    title=\"preview\"\n                    srcDoc={`${html} <style>${css}</style><script>${js}</script>`}\n                />\n            </Content>\n        </>\n    );\n};\n\nexport default SimpleCode;\n","export type Action = {type: string, payload: string}\n\nexport type SET_JS = {type:\"SET_JS\", payload: string}\n\nexport const setJS = (code:string):SET_JS =>({\n    type: \"SET_JS\",\n    payload: code\n})\n\n\nexport type SET_CSS = {type:\"SET_CSS\", payload:string}\n\nexport const setCSS = (code:string):SET_CSS =>({\n    type:\"SET_CSS\",\n    payload:code\n})\n\nexport type SET_HTML = {type:\"SET_HTML\",payload:string}\n\nexport const setHTML = (code:string):SET_HTML=>({\n    type:\"SET_HTML\",\n    payload:code\n})","import { Action } from '../actions/actions';\n\nexport interface CodeState {\n    js: string;\n    css: string;\n    html: string;\n}\n\nconst initialState = {\n    js: '',\n    css: '',\n    html: '',\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const codeReducer = (state: CodeState = initialState, action: Action) => {\n    switch (action.type) {\n        case 'SET_JS': {\n            return { ...state, js: action.payload };\n        }\n        case 'SET_CSS': {\n            return { ...state, css: action.payload };\n        }\n        case 'SET_HTML': {\n            return { ...state, html: action.payload };\n        }\n        default:\n            return state;\n    }\n};\n","import { createStore } from 'redux';\n\nimport { codeReducer } from '../reducers/codeReducer';\n\nexport const store = createStore(codeReducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SimpleCodeView from 'views/SimpleCode';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <SimpleCodeView />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}