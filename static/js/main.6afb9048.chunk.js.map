{"version":3,"sources":["components/BoxCode/styles.ts","components/BoxCode/index.tsx","components/Resizer/styles.ts","components/Resizer/ResizerBar.tsx","components/Resizer/ResizerContent.tsx","components/TitleInput/styles.ts","components/TitleInput/index.tsx","components/MobileEditorNav/styles.ts","components/MobileEditorNav/index.tsx","utils/index.ts","layout/BoxCodeBlock/styles.ts","layout/BoxCodeBlock/index.tsx","components/Styled/Button.ts","layout/Header/styles.ts","layout/Header/index.tsx","views/styles.ts","views/SimpleCode.tsx","actions/actions.ts","reducers/codeReducer.ts","store/store.ts","index.tsx"],"names":["Title","styled","h2","Header","div","BoxContent","BoxCode","initialValue","title","theme","language","onCodeChange","height","width","value","onChange","options","automaticLayout","minimap","enabled","defaultValue","Bar","props","hide","isVertical","ResizerBar","limit","xmin","ymin","xmax","ymax","onResize","onStop","xyLimit","useState","isResizing","setIsResizing","x","y","startXY","setStartXY","resize","e","clientX","clientY","diff","stopResize","resizeTouch","touches","stopResizeTouch","useEffect","window","addEventListener","removeEventListener","onTouchStart","onMouseDown","ResizerContent","children","currentX","diffX","previousX","setPreviousX","widthDiff","setWidthDiff","style","position","visibility","TitleText","TitleWrapper","TitleEditInput","input","EditButton","button","TitleInput","placeholder","onTitleChange","setTitle","editTitle","setEditTitle","autoFocus","onBlur","target","type","onClick","CodeNav","ButtonNav","isActive","MobileEditorNav","onTabChange","html","js","css","result","activeTabs","setActiveTabs","handleTabClick","tabs","getWindowDimensions","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","CodeBlock","BoxCodeBlock","setJSCode","setHTMLCode","setCSSCode","win","previousWidth","ref","useRef","current","usePrevious","initWidth","dimensionsHTML","setDimensionsHTML","dimensionsJS","setDimensionsJS","dimensionsCSS","setDimensionsCSS","tabsOn","setTabsOn","mobileMode","setMobileMode","diff1","setDiff1","diff2","setDiff2","rate","Button","MainHeader","header","HeaderTools","Logo","imgUrl","defaultTitle","useSelector","state","fileName","setFileName","process","zip","JSZip","file","generateAsync","then","content","FileSaver","saveAs","Content","Preview","iframe","SimpleCode","dispatch","useDispatch","boxCodeHeight","setBoxCodeHeight","code","payload","setCSS","setJS","setHTML","sandbox","srcDoc","initialState","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6afb9048.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n    font-family: 'Lato', 'Lucida Grande', 'Lucida Sans Unicode', Tahoma, Sans-Serif;\n    white-space: nowrap;\n    font-weight: bold;\n    color: #aaaebc;\n    margin: 0;\n    font-size: 1.3em;\n    display: inline-block;\n    padding-left: 2px;\n    vertical-align: middle;\n    -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n    -khtml-user-select: none; /* Konqueror HTML */\n    -moz-user-select: none; /* Old versions of Firefox */\n    -ms-user-select: none; /* Internet Explorer/Edge */\n    user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome, Edge, Opera and Firefox */\n`;\n\nexport const Header = styled.div`\n    background: rgba(0, 0, 0, 0.1);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.05);\n    padding: 5px;\n`;\n\nexport const BoxContent = styled.div`\n    display: flex;\n    background: #1d1e22;\n    height: 100%;\n    min-width: 0;\n    flex-direction: column;\n`;\n","import React from 'react';\nimport Editor from '@monaco-editor/react';\nimport { BoxContent, Title, Header } from './styles';\n\ninterface Props {\n    initialValue?: string;\n    title?: string;\n    language?: string;\n    theme?: string;\n    onCodeChange: (code: string) => void;\n}\n\nconst BoxCode: React.FC<Props & React.HTMLAttributes<HTMLDivElement>> = ({\n    initialValue = '',\n    title = '',\n    theme = 'vs-dark',\n    language = 'javascript',\n    onCodeChange,\n}: Props) => (\n    <BoxContent>\n        <Header>\n            <Title>{title}</Title>\n        </Header>\n        <Editor\n            height=\"calc(100% - 35px)\"\n            width=\"100%\"\n            value={initialValue}\n            onChange={(value) => {\n                onCodeChange(value || '');\n            }}\n            options={{\n                automaticLayout: true,\n                minimap: {\n                    enabled: false,\n                },\n            }}\n            theme={theme}\n            language={language}\n            defaultValue=\"\"\n        />\n    </BoxContent>\n);\n\nexport default BoxCode;\n","import styled from 'styled-components';\n\ninterface BarProps {\n    isVertical: boolean;\n    hide?: boolean;\n}\n\nexport const Bar = styled.div<BarProps>`\n    z-index: 2;\n    display: ${(props) => (props.hide ? 'none' : 'block')};\n    cursor: ${(props) => (props.isVertical ? 'row-resize' : 'col-resize')};\n    min-width: 18px;\n    min-height: 18px;\n    border-left: 1px solid rgba(255, 255, 255, 0.05);\n    border-right: 1px solid rgba(0, 0, 0, 0.4);\n    background-color: #333642;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Bar } from './styles';\n\ninterface XY {\n    x: number;\n    y: number;\n}\n\ninterface Limit {\n    xmin?: number;\n    ymin?: number;\n    xmax?: number;\n    ymax?: number;\n}\n\ninterface Props {\n    isVertical?: boolean;\n    limit?: Limit;\n    hide?: boolean;\n    onResize?: (diff: XY) => void;\n    onStop?: (n: XY) => void;\n}\n\nconst ResizerBar: React.FC<Props> = ({\n    isVertical = false,\n    limit = { xmin: 0, ymin: 0, xmax: 9999, ymax: 9999 },\n    hide = false,\n    onResize,\n    onStop,\n}) => {\n    const xyLimit = { xmin: 0, ymin: 0, xmax: 9999, ymax: 9999, ...limit };\n\n    const [isResizing, setIsResizing] = useState(false);\n    const [startXY, setStartXY] = useState({\n        x: 0,\n        y: 0,\n    });\n\n    const resize = (e: MouseEvent) => {\n        const x = e.clientX;\n        const y = e.clientY;\n\n        const diff = {\n            x: x - startXY.x,\n            y: y - startXY.y,\n        };\n\n        if (onResize) {\n            if (y >= xyLimit.ymin && y <= xyLimit.ymax) onResize(diff);\n        }\n    };\n\n    const stopResize = (e: MouseEvent) => {\n        const x = e.clientX;\n        const y = e.clientY;\n\n        const diff = {\n            x: x - startXY.x,\n            y: y - startXY.y,\n        };\n\n        if (onStop) onStop(diff);\n        setIsResizing(false);\n    };\n\n    const mouseDownHandler = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        const x = e.clientX;\n        const y = e.clientY;\n\n        setIsResizing(true);\n        setStartXY({ x, y });\n    };\n\n    const resizeTouch = (e: any) => {\n        const x = e.touches[0].clientX;\n        const y = e.touches[0].clientY;\n\n        const diff = {\n            x: x - startXY.x,\n            y: y - startXY.y,\n        };\n\n        if (onResize) {\n            if (y >= xyLimit.ymin && y <= xyLimit.ymax) onResize(diff);\n        }\n    };\n\n    const stopResizeTouch = (e: any) => {\n        const x = e.touches[0].clientX;\n        const y = e.touches[0].clientY;\n\n        const diff = {\n            x: x - startXY.x,\n            y: y - startXY.y,\n        };\n\n        if (onStop) onStop(diff);\n        setIsResizing(false);\n    };\n\n    const touchStartHandler = (e: React.TouchEvent<HTMLDivElement>) => {\n        const x = e.touches[0].clientX;\n        const y = e.touches[0].clientY;\n\n        setIsResizing(true);\n        setStartXY({ x, y });\n    };\n\n    useEffect(() => {\n        if (isResizing) {\n            window.addEventListener('mousemove', resize, false);\n            window.addEventListener('mouseup', stopResize, false);\n            window.addEventListener('touchmove', resizeTouch, false);\n            window.addEventListener('touchleave', stopResizeTouch, false);\n        } else {\n            window.removeEventListener('mousemove', resize, false);\n            window.removeEventListener('mouseup', stopResize, false);\n            window.removeEventListener('touchmove', resizeTouch, false);\n            window.removeEventListener('touchleave', stopResizeTouch, false);\n        }\n\n        return () => {\n            window.removeEventListener('mousemove', resize, false);\n            window.removeEventListener('mouseup', stopResize, false);\n            window.removeEventListener('touchmove', resizeTouch, false);\n            window.removeEventListener('touchleave', stopResizeTouch, false);\n        };\n    }, [isResizing]);\n\n    return <Bar isVertical={isVertical} hide={hide} onTouchStart={touchStartHandler} onMouseDown={mouseDownHandler} />;\n};\n\nexport default ResizerBar;\n","import React, { useState, useEffect } from 'react';\n\ninterface Props {\n    currentX: number;\n    diffX: number;\n    hide?: boolean;\n}\n\nconst ResizerContent: React.FC<Props> = ({ children, currentX, diffX, hide }) => {\n    const [previousX, setPreviousX] = useState(currentX);\n    const [widthDiff, setWidthDiff] = useState(0);\n\n    useEffect(() => {\n        setWidthDiff(0);\n        setPreviousX(currentX);\n    }, [currentX]);\n\n    useEffect(() => {\n        setWidthDiff(diffX);\n    }, [diffX]);\n\n    return (\n        <div\n            style={{\n                position: hide ? 'absolute' : 'relative',\n                visibility: hide ? 'hidden' : 'visible',\n                width: `calc(${previousX}% + ${widthDiff}px)`,\n            }}\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default ResizerContent;\n","import styled from 'styled-components';\n\nexport const TitleText = styled.h2`\n    font-family: Lato, Lucida Grande, Lucida Sans Unicode, Tahoma, Sans-Serif;\n    color: white;\n    font-size: 1.3rem;\n    font-weight: 700;\n`;\n\nexport const TitleWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    margin: 15px;\n`;\n\nexport const TitleEditInput = styled.input`\n    width: 90px;\n`;\n\nexport const EditButton = styled.button`\n    color: white;\n    background-color: transparent;\n    border: none;\n    padding: 5px;\n    margin: 3px;\n`;\n","import React, { useState } from 'react';\nimport { EditButton, TitleText, TitleEditInput, TitleWrapper } from './styles';\n\ninterface Props {\n    placeholder?: string;\n    onTitleChange?: (title: string) => void;\n}\n\nconst TitleInput: React.FC<Props> = ({ placeholder = '', onTitleChange }) => {\n    const [title, setTitle] = useState('');\n    const [editTitle, setEditTitle] = useState(false);\n\n    return (\n        <TitleWrapper>\n            {editTitle ? (\n                <TitleEditInput\n                    autoFocus\n                    onBlur={() => {\n                        setEditTitle(false);\n                    }}\n                    onChange={(e) => {\n                        setTitle(e.target.value);\n                        if (onTitleChange) onTitleChange(e.target.value);\n                    }}\n                    value={title}\n                    type=\"text\"\n                />\n            ) : (\n                <TitleText>{title || placeholder}</TitleText>\n            )}\n            <EditButton onClick={() => setEditTitle(true)}>edit</EditButton>\n        </TitleWrapper>\n    );\n};\n\nexport default TitleInput;\n","import styled from 'styled-components';\n\nexport const CodeNav = styled.div`\n    display: flex;\n    position: absolute;\n    z-index: 2;\n    width: 100%;\n    justify-content: center;\n    flex-direction: row;\n`;\n\ninterface ButtonNavProps {\n    isActive: boolean;\n}\n\nexport const ButtonNav = styled.button<ButtonNavProps>`\n    background-color: #444857;\n    color: white;\n    border: rgba(0, 0, 0, 0.09);\n    font-size: 0.8rem;\n    padding: 4px 16px;\n    line-height: 20px;\n    margin-right: 1px;\n    border-top: ${(props) => (props.isActive ? '1px solid white' : '1px solid gray')};\n    &:active {\n        transform: translateY(1px);\n        border: none;\n    }\n    &:focus {\n        outline: none;\n    }\n`;\n","import React, { useState } from 'react';\n\nimport { ButtonNav, CodeNav } from './styles';\n\ninterface TabsControl {\n    html: boolean;\n    js: boolean;\n    css: boolean;\n    result: boolean;\n}\n\ninterface Props {\n    onTabChange: (tab: TabsControl) => void;\n}\n\nconst MobileEditorNav: React.FC<Props> = ({ onTabChange }) => {\n    const [activeTabs, setActiveTabs] = useState<TabsControl>({ html: true, js: false, css: false, result: true });\n\n    const handleTabClick = (tabs: TabsControl) => {\n        setActiveTabs(tabs);\n        onTabChange(tabs);\n    };\n\n    return (\n        <CodeNav>\n            <ButtonNav\n                isActive={activeTabs.html}\n                onClick={() => {\n                    handleTabClick({ ...activeTabs, ...{ html: true, js: false, css: false } });\n                }}\n            >\n                HTML\n            </ButtonNav>\n            <ButtonNav\n                isActive={activeTabs.js}\n                onClick={() => {\n                    handleTabClick({ ...activeTabs, ...{ html: false, js: true, css: false } });\n                }}\n            >\n                JS\n            </ButtonNav>\n            <ButtonNav\n                isActive={activeTabs.css}\n                onClick={() => {\n                    handleTabClick({ ...activeTabs, ...{ html: false, js: false, css: true } });\n                }}\n            >\n                CSS\n            </ButtonNav>\n            <ButtonNav\n                isActive={activeTabs.result}\n                onClick={() => {\n                    handleTabClick({ ...activeTabs, result: !activeTabs.result });\n                }}\n            >\n                Result\n            </ButtonNav>\n        </CodeNav>\n    );\n};\n\nexport default MobileEditorNav;\n","import { useState, useEffect, useRef } from 'react';\n\ninterface WindowDimensions {\n    width: number;\n    height: number;\n}\n\nconst getWindowDimensions = () => {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height,\n    };\n};\n\n// useWindowDimensions - React hook to get window dimensions\nexport const useWindowDimensions = (): WindowDimensions => {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n};\n\nexport const usePrevious = (value: any) => {\n    const ref = useRef();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n};\n","import styled from 'styled-components';\n\ninterface CodeBlockProps {\n    height: number;\n}\n\nexport const CodeBlock = styled.div<CodeBlockProps>`\n    display: flex;\n    position: relative;\n    background-color: black;\n    height: ${(props) => `${props.height}px`};\n    flex-direction: row;\n    width: 100%;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { BoxCode, MobileEditorNav, ResizerBar, ResizerContent } from 'components';\nimport { usePrevious, useWindowDimensions } from 'utils';\nimport { CodeBlock } from './styles';\n\ninterface Props {\n    height: number;\n    setJSCode: (code: string) => void;\n    setHTMLCode: (code: string) => void;\n    setCSSCode: (code: string) => void;\n}\n\nconst BoxCodeBlock: React.FC<Props> = ({ height, setJSCode, setHTMLCode, setCSSCode }) => {\n    const win = useWindowDimensions();\n    const previousWidth = usePrevious(win.width) || win.width;\n\n    const initWidth = ((win.width - 18 * 3) / 3 / win.width) * 100;\n    const [dimensionsHTML, setDimensionsHTML] = useState(initWidth);\n    const [dimensionsJS, setDimensionsJS] = useState(initWidth);\n    const [dimensionsCSS, setDimensionsCSS] = useState(initWidth);\n\n    const [tabsOn, setTabsOn] = useState({ html: true, js: false, css: false, result: true });\n    const [mobileMode, setMobileMode] = useState(false);\n\n    const [diff1, setDiff1] = useState(0);\n    const [diff2, setDiff2] = useState(0);\n\n    useEffect(() => {\n        if (win.width < 767 || win.height < 440) {\n            setMobileMode(true);\n        } else {\n            const diff = win.width - previousWidth;\n            const rate = diff / win.width;\n            setDimensionsHTML(dimensionsHTML + rate);\n            setDimensionsJS(dimensionsJS + rate);\n            setDimensionsCSS(dimensionsCSS + rate);\n            if (mobileMode) setMobileMode(false);\n        }\n    }, [win.width]);\n\n    return (\n        <CodeBlock height={height}>\n            {mobileMode && (\n                <MobileEditorNav\n                    onTabChange={(tabs) => {\n                        setTabsOn(tabs);\n                    }}\n                />\n            )}\n            <ResizerBar hide={mobileMode} />\n            <ResizerContent\n                hide={mobileMode && !tabsOn.html}\n                currentX={mobileMode ? win.width : dimensionsHTML}\n                diffX={diff1}\n            >\n                <BoxCode title=\"HTML\" language=\"html\" onCodeChange={(value) => setHTMLCode(value)} />\n            </ResizerContent>\n            <ResizerBar\n                hide={mobileMode}\n                onResize={({ x }) => {\n                    setDiff1(x);\n                }}\n                onStop={({ x }) => {\n                    setDiff1(0);\n                    const rate = (x / win.width) * 100;\n                    setDimensionsHTML(dimensionsHTML + rate);\n                    setDimensionsJS(dimensionsJS - rate);\n                }}\n            />\n            <ResizerContent\n                hide={mobileMode && !tabsOn.js}\n                currentX={mobileMode ? win.width : dimensionsJS}\n                diffX={-diff1 + diff2}\n            >\n                <BoxCode title=\"JS\" onCodeChange={(value) => setJSCode(value)} />\n            </ResizerContent>\n            <ResizerBar\n                hide={mobileMode}\n                onResize={({ x }) => {\n                    setDiff2(x);\n                }}\n                onStop={({ x }) => {\n                    setDiff2(0);\n                    const rate = (x / win.width) * 100;\n                    setDimensionsJS(dimensionsJS + rate);\n                    setDimensionsCSS(dimensionsCSS - rate);\n                }}\n            />\n            <ResizerContent\n                hide={mobileMode && !tabsOn.css}\n                currentX={mobileMode ? win.width : dimensionsCSS}\n                diffX={-diff2}\n            >\n                <BoxCode title=\"CSS\" language=\"css\" onCodeChange={(value) => setCSSCode(value)} />\n            </ResizerContent>\n        </CodeBlock>\n    );\n};\n\nexport default BoxCodeBlock;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n    background-color: #444857;\n    color: white;\n    font-weight: 300;\n    border-radius: 5px;\n    border: rgba(0, 0, 0, 0.09);\n    font-size: 1rem;\n    padding: 10px 15px;\n    line-height: 20px;\n\n    &:active {\n        transform: translateY(1px);\n        border: none;\n    }\n    &:focus {\n        outline: none;\n    }\n`;\n","import styled from 'styled-components';\n\nexport const MainHeader = styled.header`\n    display: flex;\n    height: 65px;\n    padding: 5px 15px;\n    background-color: #1e1f26;\n    align-items: center;\n`;\n\nexport const HeaderTools = styled.div`\n    padding: 5px;\n    margin-left: auto;\n`;\n\ninterface LogoProps {\n    imgUrl: string;\n}\n\nexport const Logo = styled.div<LogoProps>`\n    background-image: ${(props) => `url(${props.imgUrl})`};\n    width: 35px;\n    height: 35px;\n    background-size: cover;\n`;\n","import React, { useState } from 'react';\nimport JSZip from 'jszip';\nimport FileSaver from 'file-saver';\nimport { useSelector } from 'react-redux';\nimport { CodeState } from 'reducers/codeReducer';\nimport { Button } from 'components/Styled';\nimport { TitleInput } from 'components';\nimport { Logo, HeaderTools, MainHeader } from './styles';\n\nconst Header: React.FC = () => {\n    const defaultTitle = 'Untitled';\n\n    const { js, html, css } = useSelector<CodeState, CodeState>((state) => state);\n\n    const [fileName, setFileName] = useState('');\n\n    return (\n        <>\n            <MainHeader>\n                <Logo imgUrl={`${process.env.PUBLIC_URL}/logo192.png`} />\n                <TitleInput\n                    placeholder={defaultTitle}\n                    onTitleChange={(title) => {\n                        setFileName(title);\n                    }}\n                />\n                <HeaderTools>\n                    <Button\n                        onClick={() => {\n                            const zip = new JSZip();\n                            zip.file('index.css', css);\n                            zip.file('main.js', js);\n                            zip.file('index.html', html);\n                            zip.generateAsync({ type: 'blob' }).then((content) => {\n                                FileSaver.saveAs(content, `${fileName || defaultTitle}.zip`);\n                            });\n                        }}\n                    >\n                        Download\n                    </Button>\n                </HeaderTools>\n            </MainHeader>\n        </>\n    );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const Content = styled.div`\n    display: flex;\n    height: 100%;\n    flex-direction: column;\n`;\n\nexport const Preview = styled.iframe`\n    user-select: none;\n    pointer-events: none;\n    width: 100%;\n    height: 100%;\n`;\n","import React, { useState } from 'react';\nimport { BoxCodeBlock, Header } from 'layout';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CodeState } from 'reducers/codeReducer';\nimport { setCSS, setHTML, setJS } from 'actions/actions';\nimport { ResizerBar } from 'components';\nimport { useWindowDimensions } from 'utils';\nimport { Content, Preview } from './styles';\n\nconst SimpleCode: React.FC = () => {\n    const { js, html, css } = useSelector<CodeState, CodeState>((state) => state);\n    const { height } = useWindowDimensions();\n\n    const dispatch = useDispatch();\n\n    const [boxCodeHeight, setBoxCodeHeight] = useState(350);\n\n    return (\n        <>\n            <Header />\n            <Content>\n                <BoxCodeBlock\n                    height={boxCodeHeight}\n                    setCSSCode={(code) => {\n                        dispatch(setCSS(code));\n                    }}\n                    setJSCode={(code) => {\n                        dispatch(setJS(code));\n                    }}\n                    setHTMLCode={(code) => {\n                        dispatch(setHTML(code));\n                    }}\n                />\n                <ResizerBar\n                    limit={{ ymin: 150, ymax: height - 100 }}\n                    onResize={({ y }) => {\n                        setBoxCodeHeight(boxCodeHeight + y);\n                    }}\n                    isVertical\n                />\n                <Preview\n                    sandbox=\"allow-downloads allow-forms allow-modals allow-pointer-lock allow-popups allow-presentation allow-same-origin allow-scripts allow-top-navigation-by-user-activation\"\n                    title=\"preview\"\n                    srcDoc={`${html} <style>${css}</style><script>${js}</script>`}\n                />\n            </Content>\n        </>\n    );\n};\n\nexport default SimpleCode;\n","export type Action = {type: string, payload: string}\n\nexport type SET_JS = {type:\"SET_JS\", payload: string}\n\nexport const setJS = (code:string):SET_JS =>({\n    type: \"SET_JS\",\n    payload: code\n})\n\n\nexport type SET_CSS = {type:\"SET_CSS\", payload:string}\n\nexport const setCSS = (code:string):SET_CSS =>({\n    type:\"SET_CSS\",\n    payload:code\n})\n\nexport type SET_HTML = {type:\"SET_HTML\",payload:string}\n\nexport const setHTML = (code:string):SET_HTML=>({\n    type:\"SET_HTML\",\n    payload:code\n})","import { Action } from '../actions/actions';\n\nexport interface CodeState {\n    js: string;\n    css: string;\n    html: string;\n}\n\nconst initialState = {\n    js: '',\n    css: '',\n    html: '',\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const codeReducer = (state: CodeState = initialState, action: Action) => {\n    switch (action.type) {\n        case 'SET_JS': {\n            return { ...state, js: action.payload };\n        }\n        case 'SET_CSS': {\n            return { ...state, css: action.payload };\n        }\n        case 'SET_HTML': {\n            return { ...state, html: action.payload };\n        }\n        default:\n            return state;\n    }\n};\n","import { createStore } from 'redux';\n\nimport { codeReducer } from '../reducers/codeReducer';\n\nexport const store = createStore(codeReducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SimpleCodeView from 'views/SimpleCode';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <SimpleCodeView />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}